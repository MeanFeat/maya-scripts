global proc shelf_Custom () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Sublime Supports" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "OpenPortsToSublime" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "connectField.png" 
        -image1 "connectField.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as cmds\n\n# Close ports if they were already open under another configuration\ntry: cmds.commandPort(name=\":7001\", close=True)\nexcept: cmds.warning('Could not close port 7001 (maybe it is not opened yet...)')\ntry: cmds.commandPort(name=\":7002\", close=True)\nexcept: cmds.warning('Could not close port 7002 (maybe it is not opened yet...)')\n\n# Open new ports\ncmds.commandPort(name=\":7001\", sourceType=\"mel\")\ncmds.commandPort(name=\":7002\", sourceType=\"python\")" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 18
        -height 21
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "KillAllScriptJobs" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "KillAllScriptJobs" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "removeRenderable.png" 
        -image1 "removeRenderable.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as cmds\ncmds.scriptJob(killAll=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "CreateScriptJob" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "CreateScriptJob" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "addPoint2.png" 
        -image1 "addPoint2.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import LayerUpdater\nreload(LayerUpdater)\nfrom LayerUpdater import *\nCreateScriptJob()\n" 
        -sourceType "python" 
        -doubleClickCommand "cmds.scriptNode( st=1, bs='from LayerUpdater import *', stp='python', n='LayerUpdaterScript0')\ncmds.scriptNode( st=1, bs='CreateScriptJob()', stp='python', n='LayerUpdaterScript0')\n" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 23
        -height 23
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "layer" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "LayerFrame" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "layerEditor.png" 
        -image1 "layerEditor.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import LayerUpdater\nreload(LayerUpdater)\nfrom LayerUpdater import * \nExportSelectedLayers()" 
        -sourceType "python" 
        -doubleClickCommand "import LayerUpdater\nreload(LayerUpdater)\nfrom LayerUpdater import * \nExportAll()" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "/* This file downloaded from Highend3d.com\n''  \n''  Highend3d.com File Information:\n''  \n''    Script Name: GhostMan\n''    Author: kas4f2 \n''    Last Updated: Nov 13, 2008\n''    Update/Change this file at:\n''    http://Highend3d.com/maya/downloads/mel_scripts/animation/2563.html\n''  \n''  Please do not alter any information above this line\n''  it is generated dynamically by Highend3d.com and will\n''  be changed automatically on any updates.\n*/\n// Global Variables\nglobal string $gmChar[], $whichPanel;\nglobal int $gmHeirarchy, $gmKeyframes, $gmSpecTick, $gmLOD, $gmVisible, $gmHideCurves, $mayaVers;\n\n//Defaults\n$mayaVers = (int) startString(`about -v`,1);\n$gmSpecTick = 0;\n$gmHeirarchy = 1;\n$gmKeyframes = 1;\n$gmLOD = 3;\n$gmVisible = 1;\n$gmHideCurves = 1;\n$whichPanel = `getPanel -withFocus`;\nshadingNode -name \"GhostTransp\" -asShader lambert -shared;\n\n\n//Initializes the UI\nproc gmInitUI() {\n\tstring $orig[] = `ls -selection`;\n\n\tglobal int $gmHeirarchy, $gmLOD, $mayaVers;\n\t\n\t// OS check -- this will probably go away once the UI is built using forms\n\tif (`about -mac`) {\n\t\t$gmButtonRowPad = 10;\n\t} else {\n\t\t$gmButtonRowPad = 1;\n\t}\n\n\tif (`window -q -ex GhostManWin`) deleteUI GhostManWin ;\n\n\t// Make Window\n\twindow -w 300 -h 5 -mnb 1 -mxb 0 -menuBar 1 -mbv 1 -rtf 1 -s 1 -t \"GhostMan - 1.0\" -in \"GhostMan\" GhostManWin;\n\n\t\t//Menu Layout\n\t\tmenu -l \"Options\" gmOptions;\n\t\t\tmenuItem -l \"Ghost Heirarchy\" -cb 1 -c \"$gmHeirarchy = 1 - $gmHeirarchy\" gmMIHeirarchy;\n\t\t\tmenuItem -l \"Only on Keyframes\" -cb 1 -c \"$gmKeyframes\t= 1 - $gmKeyframes\" gmMIKeyFrames;\n\t\t\t/*if ($mayaVers > 6) {\n\t\t\t\tmenuItem -l \"Special Tick Color\" -cb 0 -c \"$gmSpecTick = 1-$gmSpecTick\" gmMISpecialTickColor;\n\t\t\t}*/\n\t\t\tmenuItem -l \"Hide Curves\" -cb 1 -c \"$gmHideCurves = 1 - $gmHideCurves\" gmMIHideCurves;\n\t\t\tmenuItem -d true;\n\t\t\tmenuItem -l \"Level of Detail\" -sm 1 gmMILeveOfDetail;\n\t\t\t\tradioMenuItemCollection;\n\t\t\t\tmenuItem -l \"1\" -rb 0 -c \"gmChangeDetail(1); $gmLOD = 1;\" gmMILOD1;\n\t\t\t\tmenuItem -l \"2\" -rb 0 -c \"gmChangeDetail(2); $gmLOD = 2;\" gmMILOD2;\n\t\t\t\tmenuItem -l \"3\" -rb 1 -c \"gmChangeDetail(3); $gmLOD = 3;\" gmMILOD3;\n\t\t//Form Layout\n\t\tcolumnLayout -adj 1 -cat \"both\" 0 gmMainGroupCL;\n\t    \trowLayout -nc 3 -cw 1 80 -cw 2 100 gmFirstRow;\n\t\t\t\tbutton -label \" Set Character \" -width 80 -command \"gmSetCharacter\" gmBtnSetCharacter;\n\t\t\t\ttext -label \"           (No Ghosting Object Set)\" gmTxtCharacter;\n\t\t\tsetParent ..;\n\t\t\trowLayout -nc 4 -cw 1 90 -cw 2 80 -cw 3 90 gmSecondRow;\n\t\t\t\tbutton -label \" Ghost Character \" -width 90\t-command \"gmGhostCharacter\"\tgmBtnGhostCharacter;\n\t\t\t\tbutton -label \" Delete Ghosts \"\t-width 80 -command \"gmDeleteGhosts\" gmBtnDeleteGhosts;\n\t\t\t\tbutton -label \" Toggle Visibility \"\t-width 90 -command \"gmToggleVis\"\tgmBtnToggleVisibility;\t\n\t\t\tsetParent ..;\n\t\t\trowLayout -nc 3 -cw 1 120 -cw 2 120 gmThirdRow;\n\t\t\t\tbutton -label \" Refresh Current Ghost \" -width 120 -command \"gmRefreshCurrent\" gmBtnRefreshCurrent;\n\t\t\t\tbutton -label \" Delete Current Ghost \" -width 120 -command \"gmDeleteCurrent\" gmBtnDeleteCurrent;\n\t\t\tsetParent ..;\n\t\t\trowColumnLayout -numberOfRows 8;\n\t\t\t\tattrColorSliderGrp -l \"  Ghost Transparency\" -sb 0 -at GhostTransp.transparency;\n\t\t\tsetParent ..;\n\t\t\t/*rowLayout -nc 4 -cw 1 100 -cw 2 30 -cw 3 30 -cw 4 30 gmFourthRow;\n\t\t\t\ttext -l \"  Use Frame Range \" gmTxtFrameRange;\n\t\t\t\tcheckBox -l \"\" -rs 1 gmChbxFrame;\n\t\t\t\ttext -l \"From\" -al \"right\" gmTxtFromText;\n\t\t\t\ttext -l \"To\" -al \"right\" gmTxtToText;\n\t\t\tsetParent ..;*/\n\t\tsetParent ..;\n\t\t\t\n\t\t\t\t\n\tselect -cl;\n\t\n\tshowWindow GhostManWin ;\n\n\tscriptJob -p GhostManWin -e \"SceneOpened\" \"deleteUI GhostManWin; gmInitUI;\";\n\tscriptJob -p GhostManWin -e \"NewSceneOpened\" \"deleteUI GhostManWin;\";\n//\tscriptJob -p GhostManWin -e \"timeChanged\" \"gmFrameChange;\";\n\n}\n\n\nproc gmFrameChange(){\n\t//old, don't use\n\tglobal string $gmChar[];\n\t\n\tif ($gmChar[0] != \"\") {\n//\t\thide gmGhostGroup;\t\n\n\t\tint $now = `currentTime - query`;\n\t\tint $i = $now + 10;\n\t\tstring $temp[];\n\t\t\n\t\t//hide gmGhostGroup;\n\t\t\n\t\twhile ($i != $now - 10){\n\t\t\tstring $sel;\n\t\t\tstring $a = \"gmFrame_\";\n\t\t\tstring $c = $a + $i;\n\t\t\t$temp = `ls $c`;\n\t\t\t\n\t\t\tif (size($temp) != 0) {\n\t\t\t\tfor ($sel in $temp) {\n\t\t\t\t\tshowHidden $sel;\n\t\t\t\t\tprint $sel;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$i--;\n\t\t}\n\t}\n}\n\n\n//Lowers resolution on ghost group for performance reasons\nproc gmChangeDetail(int $res) {\n\t\n\tif (`objExists gmGhostGroup`) {\n\t\tselect -r gmGhostGroup ;\n\t\t\t\n\t\tif ($res == 1) {\n\t\t\tdisplaySmoothness \n\t\t\t\t-divisionsU 0 \n\t\t\t\t-divisionsV 0 \n\t\t\t\t-pointsWire 4 \n\t\t\t\t-pointsShaded 1 \n\t\t\t\t-polygonObject 1;\n\t\t\tsubdivDisplaySmoothness -smoothness $res;\n\t\t}\n\t\tif ($res == 2) {\n\t\t\tdisplaySmoothness \n\t\t\t\t-divisionsU 1 \n\t\t\t\t-divisionsV 1 \n\t\t\t\t-pointsWire 8 \n\t\t\t\t-pointsShaded 2 \n\t\t\t\t-polygonObject 2;\n\t\t\tsubdivDisplaySmoothness -smoothness $res;\n\t\t}\n\t\tif ($res == 3) {\n\t\t\tdisplaySmoothness \n\t\t\t\t-divisionsU 3 \n\t\t\t\t-divisionsV 3 \n\t\t\t\t-pointsWire 16 \n\t\t\t\t-pointsShaded 4 \n\t\t\t\t-polygonObject 3;\n\t\t\tsubdivDisplaySmoothness -smoothness $res;\n\t\t}\n\t\tselect -cl;\n\t}\n}\n\n\n//Hides NurbsCurves in Ghost Group \nproc gmHideCurves()\n{\n\tglobal int $gmHideCurves;\n\t\n\tif ($gmHideCurves == 1) {\n\t\tselect -r -hi gmGhostGroup;\n\t\t\n\t\tstring $temp[];\n\t\tstring $sel;\n\t\t$temp = `ls -sl -typ nurbsCurve`;\n\t\tselect -cl;\n\t\tfor ($sel in $temp)\n\t\t{\n\t\t\thide $sel;\n\t\t}\n\t}\n}\n\n\n//deletes and recreates ghost on current frame\nproc gmRefreshCurrent(){\n\tgmDeleteCurrent();\n\tgmGhostCharacter();\n}\n\n\n//deletes ghost on the current frame or keyframe\nproc gmDeleteCurrent(){\n\tglobal int $gmKeyframes;\n\tint $now = `currentTime -query`;\n\t\n\t//if keyframes is checked\n\tif ($gmKeyframes == 1) {\n\t\tint $i;\n\t\t$i = `findKeyframe -timeSlider -which previous`;\n\t\t\n\t\tcurrentTime -edit $i;\n\t\tif (`findKeyframe -timeSlider -which next` == $now){\n\t\t\tcurrentTime -edit $now;\n\t\t}\t\n\t}\n\t\n\n\tstring $time = `currentTime -query`;\n\tstring $name = \"gmFrame_\" + $time;\n\t\n\t\n\tcurrentTime -edit $now;\n\t\n\tif (`objExists $name`){\n\t\tdelete $name;\n\t} else {\n\t\tif ($gmKeyframes == 1) {\n\t\t\terror (\"No Object \" + $name + \". No Ghost Exists on Current Keyframe\");\n\t\t} else {\n\t\t\terror (\"No Object \" + $name + \". No Ghost Exists on Current Frame\");\n\t\t}\n\t}\n}\n\n\n//Deletes all ghosts\nproc gmDeleteGhosts(){\n\tif (`objExists gmGhostGroup`) {   \n\t\tdelete gmGhostGroup;\n\t}\n}\n\n\n//Sets character\nproc gmSetCharacter(){\n\n\tglobal int $gmHeirarchy;\n\tglobal string $gmChar[];\n\t\n\tgmDeleteGhosts();\n\t\n\t//capture original selection and time\n\tstring $orig[] = `ls -selection`;\n\tint $now = `currentTime -query`;\n\t\n\tif ($orig[0] == \"\") {\n\t\terror (\"No Object Selected\");\n\t}\n\t\n\t//if heirarchy is checked\n\tif ($gmHeirarchy == 1) {\n\t\t//pickwalk up until top node is reached\n\t\tselect -hi;\n\t\t\n\t\t$temp = `ls -sl`;\n\t\tpickWalk -d up;\n\t\t$temp2 = `ls -sl`;\n\t\t\n\t\twhile ($temp[0] != $temp2[0]){\n\t\t\t$temp = `ls -sl`;\n\t\t\tpickWalk -d up;\n\t\t\t$temp2 = `ls -sl`;\n\t\t}\n\t}\n\t$gmChar = `ls -sl`;\n\t\n\t//Error when nothing selected\n\tif ( size($gmChar) == 0 ) error \"No geometry selected!\";\n\n\t//Edit UI label\n\t$label = \"           (\" + $gmChar[0] + \")\";\n\ttext -edit -label $label gmTxtCharacter;\n\t\n\t// Restore the original selection and time. \n\tselect -replace $orig;\n\tcurrentTime -edit $now;\n\n}\n\n\n//Hides/Shows gmGhostGroup\nproc gmToggleVis(){\n\tglobal int $gmVisible;\n\tstring $orig[] = `ls -selection`;\n\t\n\tselect -r gmGhostGroup ; \n\t\n\tif ($gmVisible == 1) {\n\t\thide `ls -sl`;\n\t} else {\n\t\tshowHidden -a;\n\t}\n\t\n\t$gmVisible = 1 - $gmVisible;\n\tselect -replace $orig;\n}\n\n\n//Ghosts every frame with a keyframe on it\nglobal proc gmGhostCharacter(){\n\n\tglobal string $gmChar[];\n\tglobal int $gmLOD, $gmKeyframes;\n\t\n\t//capture original selection and time\n\tstring $orig[] = `ls -selection`;\n\tint $now = `currentTime -query`;\n\t\n\t//declare ghost group if it doesn't exist\n    if (! `objExists gmGhostGroup`) \n    {\n\t\tgroup -name gmGhostGroup -empty;\n      \tsetAttr \"gmGhostGroup.overrideEnabled\" 1;         \n    }\n\n\t\n\t//only ghosts on a keyframes if checked\n\tif ($gmKeyframes == 1) {\n\t\tint $i;\n\t\t$i = `findKeyframe -timeSlider -which previous`;\n\t\t\n\t\tcurrentTime -edit $i;\n\t\tif (`findKeyframe -timeSlider -which next` == $now){\n\t\t\tcurrentTime -edit $now;\n\t\t}\t\n\t}\n\t\n\tselect $gmChar;\n\t\n\tstring $time = `currentTime -query`;\n\tstring $name = \"gmFrame_\" + $time;\n\tif (! `objExists $name`){\t\n\t\tgmGhost($gmChar);\n\t}\n\t\t\n\t\tgmHideCurves();\n\t\n\t\tgmChangeDetail($gmLOD);\n\t\n\t\n\t\n   \t// Restore the original selection and time. \n\tselect -replace $orig;\n\tcurrentTime -edit $now;\n}\n\n\n// Main proc to ghost the selected object on the current frame\nproc gmGhost(string $object[]){\n\t\n\tselect $object[0];\n\n\t//labels a \n\tstring $a = \"gmFrame_\";\n\tint $time = `currentTime -query`;\n\tstring $c = $a + $time;\n\n   \tshowHidden -a;\n\t//duplicate object\n    duplicate -rc;\n\t//group it to itself\n\tgroup -name $c;\n\t//parent it to the main group\n\tparent $c gmGhostGroup;\n\t\n\t// Assign existing shader to selected.\n\tif ( catch (`shadingNode -name \"GhostTransp\" -asShader lambert -shared`) ) ;\n\tsets  -name GhostTranspSG -renderable yes -noSurfaceShader yes -empty;\n\n\tselect $object[0];\n\t\n   \t// Add the selected geometry to the shading group. \n\tsets  -edit  -forceElement GhostTranspSG gmGhostGroup;\n\tselect -deselect;\n\tif ( catch (`connectAttr GhostTransp.outColor GhostTranspSG.surfaceShader`) ) ;\n\t\n}\n\ngmInitUI;\n" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Ghost" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "ghostOff.png" 
        -image1 "ghostOff.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "/* This file downloaded from Highend3d.com\n''  \n''  Highend3d.com File Information:\n''  \n''    Script Name: GhostMan\n''    Author: kas4f2 \n''    Last Updated: Nov 13, 2008\n''    Update/Change this file at:\n''    http://Highend3d.com/maya/downloads/mel_scripts/animation/2563.html\n''  \n''  Please do not alter any information above this line\n''  it is generated dynamically by Highend3d.com and will\n''  be changed automatically on any updates.\n*/\n// Global Variables\nglobal string $gmChar[], $whichPanel;\nglobal int $gmHeirarchy, $gmKeyframes, $gmSpecTick, $gmLOD, $gmVisible, $gmHideCurves, $mayaVers;\n\n//Defaults\n$mayaVers = (int) startString(`about -v`,1);\n$gmSpecTick = 0;\n$gmHeirarchy = 1;\n$gmKeyframes = 1;\n$gmLOD = 3;\n$gmVisible = 1;\n$gmHideCurves = 1;\n$whichPanel = `getPanel -withFocus`;\nshadingNode -name \"GhostTransp\" -asShader lambert -shared;\n\n\n//Initializes the UI\nproc gmInitUI() {\n\tstring $orig[] = `ls -selection`;\n\n\tglobal int $gmHeirarchy, $gmLOD, $mayaVers;\n\t\n\t// OS check -- this will probably go away once the UI is built using forms\n\tif (`about -mac`) {\n\t\t$gmButtonRowPad = 10;\n\t} else {\n\t\t$gmButtonRowPad = 1;\n\t}\n\n\tif (`window -q -ex GhostManWin`) deleteUI GhostManWin ;\n\n\t// Make Window\n\twindow -w 300 -h 5 -mnb 1 -mxb 0 -menuBar 1 -mbv 1 -rtf 1 -s 1 -t \"GhostMan - 1.0\" -in \"GhostMan\" GhostManWin;\n\n\t\t//Menu Layout\n\t\tmenu -l \"Options\" gmOptions;\n\t\t\tmenuItem -l \"Ghost Heirarchy\" -cb 1 -c \"$gmHeirarchy = 1 - $gmHeirarchy\" gmMIHeirarchy;\n\t\t\tmenuItem -l \"Only on Keyframes\" -cb 1 -c \"$gmKeyframes\t= 1 - $gmKeyframes\" gmMIKeyFrames;\n\t\t\t/*if ($mayaVers > 6) {\n\t\t\t\tmenuItem -l \"Special Tick Color\" -cb 0 -c \"$gmSpecTick = 1-$gmSpecTick\" gmMISpecialTickColor;\n\t\t\t}*/\n\t\t\tmenuItem -l \"Hide Curves\" -cb 1 -c \"$gmHideCurves = 1 - $gmHideCurves\" gmMIHideCurves;\n\t\t\tmenuItem -d true;\n\t\t\tmenuItem -l \"Level of Detail\" -sm 1 gmMILeveOfDetail;\n\t\t\t\tradioMenuItemCollection;\n\t\t\t\tmenuItem -l \"1\" -rb 0 -c \"gmChangeDetail(1); $gmLOD = 1;\" gmMILOD1;\n\t\t\t\tmenuItem -l \"2\" -rb 0 -c \"gmChangeDetail(2); $gmLOD = 2;\" gmMILOD2;\n\t\t\t\tmenuItem -l \"3\" -rb 1 -c \"gmChangeDetail(3); $gmLOD = 3;\" gmMILOD3;\n\t\t//Form Layout\n\t\tcolumnLayout -adj 1 -cat \"both\" 0 gmMainGroupCL;\n\t    \trowLayout -nc 3 -cw 1 80 -cw 2 100 gmFirstRow;\n\t\t\t\tbutton -label \" Set Character \" -width 80 -command \"gmSetCharacter\" gmBtnSetCharacter;\n\t\t\t\ttext -label \"           (No Ghosting Object Set)\" gmTxtCharacter;\n\t\t\tsetParent ..;\n\t\t\trowLayout -nc 4 -cw 1 90 -cw 2 80 -cw 3 90 gmSecondRow;\n\t\t\t\tbutton -label \" Ghost Character \" -width 90\t-command \"gmGhostCharacter\"\tgmBtnGhostCharacter;\n\t\t\t\tbutton -label \" Delete Ghosts \"\t-width 80 -command \"gmDeleteGhosts\" gmBtnDeleteGhosts;\n\t\t\t\tbutton -label \" Toggle Visibility \"\t-width 90 -command \"gmToggleVis\"\tgmBtnToggleVisibility;\t\n\t\t\tsetParent ..;\n\t\t\trowLayout -nc 3 -cw 1 120 -cw 2 120 gmThirdRow;\n\t\t\t\tbutton -label \" Refresh Current Ghost \" -width 120 -command \"gmRefreshCurrent\" gmBtnRefreshCurrent;\n\t\t\t\tbutton -label \" Delete Current Ghost \" -width 120 -command \"gmDeleteCurrent\" gmBtnDeleteCurrent;\n\t\t\tsetParent ..;\n\t\t\trowColumnLayout -numberOfRows 8;\n\t\t\t\tattrColorSliderGrp -l \"  Ghost Transparency\" -sb 0 -at GhostTransp.transparency;\n\t\t\tsetParent ..;\n\t\t\t/*rowLayout -nc 4 -cw 1 100 -cw 2 30 -cw 3 30 -cw 4 30 gmFourthRow;\n\t\t\t\ttext -l \"  Use Frame Range \" gmTxtFrameRange;\n\t\t\t\tcheckBox -l \"\" -rs 1 gmChbxFrame;\n\t\t\t\ttext -l \"From\" -al \"right\" gmTxtFromText;\n\t\t\t\ttext -l \"To\" -al \"right\" gmTxtToText;\n\t\t\tsetParent ..;*/\n\t\tsetParent ..;\n\t\t\t\n\t\t\t\t\n\tselect -cl;\n\t\n\tshowWindow GhostManWin ;\n\n\tscriptJob -p GhostManWin -e \"SceneOpened\" \"deleteUI GhostManWin; gmInitUI;\";\n\tscriptJob -p GhostManWin -e \"NewSceneOpened\" \"deleteUI GhostManWin;\";\n//\tscriptJob -p GhostManWin -e \"timeChanged\" \"gmFrameChange;\";\n\n}\n\n\nproc gmFrameChange(){\n\t//old, don't use\n\tglobal string $gmChar[];\n\t\n\tif ($gmChar[0] != \"\") {\n//\t\thide gmGhostGroup;\t\n\n\t\tint $now = `currentTime - query`;\n\t\tint $i = $now + 10;\n\t\tstring $temp[];\n\t\t\n\t\t//hide gmGhostGroup;\n\t\t\n\t\twhile ($i != $now - 10){\n\t\t\tstring $sel;\n\t\t\tstring $a = \"gmFrame_\";\n\t\t\tstring $c = $a + $i;\n\t\t\t$temp = `ls $c`;\n\t\t\t\n\t\t\tif (size($temp) != 0) {\n\t\t\t\tfor ($sel in $temp) {\n\t\t\t\t\tshowHidden $sel;\n\t\t\t\t\tprint $sel;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$i--;\n\t\t}\n\t}\n}\n\n\n//Lowers resolution on ghost group for performance reasons\nproc gmChangeDetail(int $res) {\n\t\n\tif (`objExists gmGhostGroup`) {\n\t\tselect -r gmGhostGroup ;\n\t\t\t\n\t\tif ($res == 1) {\n\t\t\tdisplaySmoothness \n\t\t\t\t-divisionsU 0 \n\t\t\t\t-divisionsV 0 \n\t\t\t\t-pointsWire 4 \n\t\t\t\t-pointsShaded 1 \n\t\t\t\t-polygonObject 1;\n\t\t\tsubdivDisplaySmoothness -smoothness $res;\n\t\t}\n\t\tif ($res == 2) {\n\t\t\tdisplaySmoothness \n\t\t\t\t-divisionsU 1 \n\t\t\t\t-divisionsV 1 \n\t\t\t\t-pointsWire 8 \n\t\t\t\t-pointsShaded 2 \n\t\t\t\t-polygonObject 2;\n\t\t\tsubdivDisplaySmoothness -smoothness $res;\n\t\t}\n\t\tif ($res == 3) {\n\t\t\tdisplaySmoothness \n\t\t\t\t-divisionsU 3 \n\t\t\t\t-divisionsV 3 \n\t\t\t\t-pointsWire 16 \n\t\t\t\t-pointsShaded 4 \n\t\t\t\t-polygonObject 3;\n\t\t\tsubdivDisplaySmoothness -smoothness $res;\n\t\t}\n\t\tselect -cl;\n\t}\n}\n\n\n//Hides NurbsCurves in Ghost Group \nproc gmHideCurves()\n{\n\tglobal int $gmHideCurves;\n\t\n\tif ($gmHideCurves == 1) {\n\t\tselect -r -hi gmGhostGroup;\n\t\t\n\t\tstring $temp[];\n\t\tstring $sel;\n\t\t$temp = `ls -sl -typ nurbsCurve`;\n\t\tselect -cl;\n\t\tfor ($sel in $temp)\n\t\t{\n\t\t\thide $sel;\n\t\t}\n\t}\n}\n\n\n//deletes and recreates ghost on current frame\nproc gmRefreshCurrent(){\n\tgmDeleteCurrent();\n\tgmGhostCharacter();\n}\n\n\n//deletes ghost on the current frame or keyframe\nproc gmDeleteCurrent(){\n\tglobal int $gmKeyframes;\n\tint $now = `currentTime -query`;\n\t\n\t//if keyframes is checked\n\tif ($gmKeyframes == 1) {\n\t\tint $i;\n\t\t$i = `findKeyframe -timeSlider -which previous`;\n\t\t\n\t\tcurrentTime -edit $i;\n\t\tif (`findKeyframe -timeSlider -which next` == $now){\n\t\t\tcurrentTime -edit $now;\n\t\t}\t\n\t}\n\t\n\n\tstring $time = `currentTime -query`;\n\tstring $name = \"gmFrame_\" + $time;\n\t\n\t\n\tcurrentTime -edit $now;\n\t\n\tif (`objExists $name`){\n\t\tdelete $name;\n\t} else {\n\t\tif ($gmKeyframes == 1) {\n\t\t\terror (\"No Object \" + $name + \". No Ghost Exists on Current Keyframe\");\n\t\t} else {\n\t\t\terror (\"No Object \" + $name + \". No Ghost Exists on Current Frame\");\n\t\t}\n\t}\n}\n\n\n//Deletes all ghosts\nproc gmDeleteGhosts(){\n\tif (`objExists gmGhostGroup`) {   \n\t\tdelete gmGhostGroup;\n\t}\n}\n\n\n//Sets character\nproc gmSetCharacter(){\n\n\tglobal int $gmHeirarchy;\n\tglobal string $gmChar[];\n\t\n\tgmDeleteGhosts();\n\t\n\t//capture original selection and time\n\tstring $orig[] = `ls -selection`;\n\tint $now = `currentTime -query`;\n\t\n\tif ($orig[0] == \"\") {\n\t\terror (\"No Object Selected\");\n\t}\n\t\n\t//if heirarchy is checked\n\tif ($gmHeirarchy == 1) {\n\t\t//pickwalk up until top node is reached\n\t\tselect -hi;\n\t\t\n\t\t$temp = `ls -sl`;\n\t\tpickWalk -d up;\n\t\t$temp2 = `ls -sl`;\n\t\t\n\t\twhile ($temp[0] != $temp2[0]){\n\t\t\t$temp = `ls -sl`;\n\t\t\tpickWalk -d up;\n\t\t\t$temp2 = `ls -sl`;\n\t\t}\n\t}\n\t$gmChar = `ls -sl`;\n\t\n\t//Error when nothing selected\n\tif ( size($gmChar) == 0 ) error \"No geometry selected!\";\n\n\t//Edit UI label\n\t$label = \"           (\" + $gmChar[0] + \")\";\n\ttext -edit -label $label gmTxtCharacter;\n\t\n\t// Restore the original selection and time. \n\tselect -replace $orig;\n\tcurrentTime -edit $now;\n\n}\n\n\n//Hides/Shows gmGhostGroup\nproc gmToggleVis(){\n\tglobal int $gmVisible;\n\tstring $orig[] = `ls -selection`;\n\t\n\tselect -r gmGhostGroup ; \n\t\n\tif ($gmVisible == 1) {\n\t\thide `ls -sl`;\n\t} else {\n\t\tshowHidden -a;\n\t}\n\t\n\t$gmVisible = 1 - $gmVisible;\n\tselect -replace $orig;\n}\n\n\n//Ghosts every frame with a keyframe on it\nglobal proc gmGhostCharacter(){\n\n\tglobal string $gmChar[];\n\tglobal int $gmLOD, $gmKeyframes;\n\t\n\t//capture original selection and time\n\tstring $orig[] = `ls -selection`;\n\tint $now = `currentTime -query`;\n\t\n\t//declare ghost group if it doesn't exist\n    if (! `objExists gmGhostGroup`) \n    {\n\t\tgroup -name gmGhostGroup -empty;\n      \tsetAttr \"gmGhostGroup.overrideEnabled\" 1;         \n    }\n\n\t\n\t//only ghosts on a keyframes if checked\n\tif ($gmKeyframes == 1) {\n\t\tint $i;\n\t\t$i = `findKeyframe -timeSlider -which previous`;\n\t\t\n\t\tcurrentTime -edit $i;\n\t\tif (`findKeyframe -timeSlider -which next` == $now){\n\t\t\tcurrentTime -edit $now;\n\t\t}\t\n\t}\n\t\n\tselect $gmChar;\n\t\n\tstring $time = `currentTime -query`;\n\tstring $name = \"gmFrame_\" + $time;\n\tif (! `objExists $name`){\t\n\t\tgmGhost($gmChar);\n\t}\n\t\t\n\t\tgmHideCurves();\n\t\n\t\tgmChangeDetail($gmLOD);\n\t\n\t\n\t\n   \t// Restore the original selection and time. \n\tselect -replace $orig;\n\tcurrentTime -edit $now;\n}\n\n\n// Main proc to ghost the selected object on the current frame\nproc gmGhost(string $object[]){\n\t\n\tselect $object[0];\n\n\t//labels a \n\tstring $a = \"gmFrame_\";\n\tint $time = `currentTime -query`;\n\tstring $c = $a + $time;\n\n   \tshowHidden -a;\n\t//duplicate object\n    duplicate -rc;\n\t//group it to itself\n\tgroup -name $c;\n\t//parent it to the main group\n\tparent $c gmGhostGroup;\n\t\n\t// Assign existing shader to selected.\n\tif ( catch (`shadingNode -name \"GhostTransp\" -asShader lambert -shared`) ) ;\n\tsets  -name GhostTranspSG -renderable yes -noSurfaceShader yes -empty;\n\n\tselect $object[0];\n\t\n   \t// Add the selected geometry to the shading group. \n\tsets  -edit  -forceElement GhostTranspSG gmGhostGroup;\n\tselect -deselect;\n\tif ( catch (`connectAttr GhostTransp.outColor GhostTranspSG.surfaceShader`) ) ;\n\t\n}\n\ngmInitUI;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 23
        -height 23
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "tween" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Tween" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "insertKeySmall.png" 
        -image1 "insertKeySmall.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "#     import abzTweenMachine\n#     abzTweenMachine.abzTweenMachineWindow()\n#     reload(abzTweenMachine)\n\n\n#--------------start\nimport maya.cmds as maya\nimport maya.mel as mel\nimport math\nimport sys\nmaya.displayRGBColor('timeSliderBreakdown', 0, 0.70, 0.70)\n\n#--------------procedura create window --------------------------------------------------------------------------------------------------------------------------\ndef abzTweenMachineWindow():\n\n\tglobal aTMactionTime\n\tglobal aTMtweenMachineCollect\n\tglobal aTMlastSelected\n\tglobal aTMmaxValArray\n\t\n\taTMsettingStatus = 0\n\taTMtweenStatus = 1\n\taTMgroupsStatus = 0\n\taTMghostsStatus = 0\n\taTMkeyToolsStatus = 0\n\taTMstatus = \"OK!!!\"\n\taTMbgcOK = [0.332,0.885,0.683]\n\taTMactionTime = -0.356\n\taTMtweenMachineCollect = 1\n\taTMlastSelected = []\n\taTMmaxValArray = []\n\tmVersion = mel.eval( \"getApplicationVersionAsFloat\" )\n\tif int(mVersion) <= 2010:\n\t\tstepButtonDistance = [60,162,27,200]\n\telse:\n\t\tstepButtonDistance = [47,173,27,200]\n\n\tif maya.window('abzTweenMachineWindow',ex=1):\n\t\tmaya.deleteUI('abzTweenMachineWindow',wnd=1)\n\twindow = maya.window('abzTweenMachineWindow',t=\"Advanced Tween Machine LITE\",s=1,mb=1)\n\tmaya.menu( l='Settings',to=0,ni=0,pmc=__name__+\".doChangeaTMWindowGrp(\\\"aTMsettingsLayout\\\")\")\n\tmaya.menu( l='Tween Machine',ni=0,to=0,pmc=__name__+\".doChangeaTMWindowGrp(\\\"aTMtweenMachineLayout\\\")\")\n\tmaya.menu( l='Groups',to=0,en=0,pmc=__name__+\".doChangeaTMWindowGrp(\\\"aTMgroupsLayout\\\")\")\n\tmaya.menu( l='Ghosts',to=0,en=1,pmc=__name__+\".doChangeaTMWindowGrp(\\\"aTMghostsLayout\\\")\")\n#\tmaya.menu( l='Key tools',to=0,en=1,pmc=__name__+\".doChangeaTMWindowGrp(\\\"aTMkeyToolsLayout\\\")\")\n\tmaya.menu( l='Fix',to=0,pmc=__name__+\".doFixTMscript()\")\n\tmaya.menu( l='About',to=0,hm=1,pmc=__name__+\".doShowAbout()\")\n\tmaya.columnLayout('aTMframeLayoutParent',rs=0,adj=1)\n\tmaya.rowLayout(\"aTMstatusRowlayout\",nc=2, cw2=(60,351),cl2=[\"right\",\"left\"],bgc=aTMbgcOK)\n\tmaya.text('aTMstatusInfo',l=\"Status :\",al=\"right\",bgc=aTMbgcOK)\n\tmaya.text('aTMSTATUS',l=aTMstatus,al=\"left\",bgc=aTMbgcOK)\n\tmaya.setParent( '..' )\n\tmaya.frameLayout('aTMsettingsLayout',l=\"Settings\",bs=\"etchedOut\",w=411,cll=1,cl=-aTMsettingStatus+1,vis=aTMsettingStatus,p='aTMframeLayoutParent')\n\tmaya.columnLayout(rs=3,adj=0)\n\tmaya.rowLayout(nc=2, cw2=(60,351))\n\tmaya.text( l='' )\n\tmaya.radioButtonGrp('aTMworkModeRadiobutton',cl2=[\"left\",\"left\"],l='Working mode',la2=['fast (in buffor)','slow (on curves)'],cw3=[100,90,100],nrb=2,en=1,sl=1,cl3=[\"left\",\"left\",\"left\"])\n\tmaya.setParent( '..' )\n\tmaya.rowLayout(nc=2, cw2=(60,351))\n\tmaya.text( l='' )\n\tmaya.radioButtonGrp('aTMmayaLinkRadiobutton',cl2=[\"left\",\"left\"],l='Link with maya',la2=['yes','no'],cw3=[100,90,90],nrb=2,en=1,sl=2,cl3=[\"left\",\"left\",\"left\"],on1=__name__+\".doSetLinkWithMaya(1)\",on2=__name__+\".doSetLinkWithMaya(0)\" )\n\tmaya.setParent( '..' )\n\tmaya.rowLayout(nc=2, cw2=(60,351))\n\tmaya.text( l='' )\n\tmaya.radioButtonGrp('aTMtweenBetweenRadiobutton',cl2=[\"left\",\"left\"],l='Tween between',la2=['poses','keys'],cw3=[100,90,90],nrb=2,en=1,sl=1,cl3=[\"left\",\"left\",\"left\"],cc=__name__+\".doSetaTMactionTime()\" )\n\tmaya.setParent( '..' )\n\tmaya.rowLayout(nc=2, cw2=(60,351))\n\tmaya.text( l='' )\n\tmaya.radioButtonGrp('aTMkeyTangentRadiobutton',cl3=[\"left\",\"left\",\"left\"],l='Key tangent',la3=['auto', 'step', 'linear'],cw4=[100,90,90,80],nrb=3,en=1,sl=1,cl4=[\"left\",\"left\",\"left\",\"left\"],cc=__name__+\".doSetaTMactionTime()\" )\n\tmaya.setParent( '..' )\n\tmaya.rowLayout(nc=2, cw2=(60,351))\n\tmaya.text( l='' )\n\tmaya.radioButtonGrp('aTMkeyTypeRadiobutton',cl2=[\"left\",\"left\"],l='Key type',la2=['pose', 'breakdown'],cw3=[100,90,90],nrb=2,en=1,sl=1,cl3=[\"left\",\"left\",\"left\"] )\n\tmaya.setParent( '..' )\n\tmaya.rowLayout(nc=3, cw3=(60,280,71),en=1)\n\tmaya.text( l='' )\n\tmaya.checkBoxGrp('aTMpredictArcCheckBox',cl2=[\"left\",\"left\"],ncb=2, l='Predict', la2=[ 'arc', 'overlap'],va2 = [0,0],en=1,cw3=[100,90,90],cl3=[\"left\",\"left\",\"left\"])\n\tmaya.floatFieldGrp('aTMpredictVarCheckBox',nf=1,el='lag',v1=0.2,pre=2,cw2=[30,41],cl2=[\"left\",\"left\"] )\n\tmaya.setParent( '..' )\n\tmaya.frameLayout('aTMtweenMachineLayout',l=\"Tween Machine\",bs=\"etchedOut\",w=411,cll=0,cl=-aTMtweenStatus+1,vis=aTMtweenStatus,p='aTMframeLayoutParent')\n\tmaya.columnLayout(rs=3,adj=0)\n\tmaya.rowLayout( nc=4, cw4=(60,175,176,27),cl4=[\"center\",\"right\",\"left\",\"center\"])\n\tmaya.text( l='' )\n\tmaya.text( l='\\\\',w=175)\n\tmaya.text( l='/' )\n\tmaya.text( l='' )\n\tmaya.setParent( '..' )\n\tmaya.floatSliderGrp('aTMmainFloatSliderGrp',el='',f=1,min=-50.0,max=150.0,fmn=-50.0,fmx=150.0,v=50,cw3=[60,351,1],cc=__name__+\".doSetTweenKey(\\\"sliderEnd\\\",0)\",dc=__name__+\".doSetTweenKey(\\\"sliderDrag\\\",0)\")\t\n\tmaya.floatSliderGrp('aTMmainFloatSliderGrp',e=1,adj=2,cw=[2,351])\n\tmaya.rowLayout( nc=4, cw4=stepButtonDistance,cl4=[\"left\",\"right\",\"center\",\"left\"])\n\tmaya.text( l='' )\n\tmaya.rowLayout( nc=6, cw6=(27,27,27,27,27,27),cl6=[\"center\",\"center\",\"center\",\"center\",\"center\",\"center\"])\n\tmaya.button(l='-50',w=27,c=__name__+\".doSetTweenKey(\\\"button\\\",-50)\")\n\tmaya.button(l='-33',w=27,c=__name__+\".doSetTweenKey(\\\"button\\\",-33)\")\n\tmaya.button(l='-16',w=27,c=__name__+\".doSetTweenKey(\\\"button\\\",-16)\")\n\tmaya.button(l='0',w=27,c=__name__+\".doSetTweenKey(\\\"button\\\",0)\")\n\tmaya.button(l='16',w=27,c=__name__+\".doSetTweenKey(\\\"button\\\",16)\")\n\tmaya.button(l='33',w=27,c=__name__+\".doSetTweenKey(\\\"button\\\",33)\")\n\tmaya.setParent( '..' )\n\tmaya.button(l='50',w=27,c=__name__+\".doSetTweenKey(\\\"button\\\",50)\")\n\tmaya.rowLayout( nc=6, cw6=(27,27,27,27,27,27),cl6=[\"center\",\"center\",\"center\",\"center\",\"center\",\"center\"])\n\tmaya.button(l='67',w=27,c=__name__+\".doSetTweenKey(\\\"button\\\",67)\")\n\tmaya.button(l='84',w=27,c=__name__+\".doSetTweenKey(\\\"button\\\",84)\")\n\tmaya.button(l='100',w=27,c=__name__+\".doSetTweenKey(\\\"button\\\",100)\")\n\tmaya.button(l='116',w=27,c=__name__+\".doSetTweenKey(\\\"button\\\",116)\")\n\tmaya.button(l='133',w=27,c=__name__+\".doSetTweenKey(\\\"button\\\",133)\")\n\tmaya.button(l='150',w=27,c=__name__+\".doSetTweenKey(\\\"button\\\",150)\")\n\tmaya.setParent( '..' )\n\tmaya.setParent( '..' )\n\tmaya.rowLayout( nc=5, cw5=(60,88,87,88,88),cl5=[\"right\",\"right\",\"right\",\"left\",\"left\"])\n\tmaya.text( l='' )\n\tmaya.button('aTMmoveAnim<',l='anim <<<',w=88,c=__name__+\".doMoveFrames(\\\"-1\\\",\\\"1\\\")\")\t\n\tmaya.button('aTMmovePose<',l='pose <',w=87,c=__name__+\".doMoveFrames(\\\"-1\\\",\\\"0\\\")\")\n\tmaya.button('aTMmovePose>',l='> pose',w=88,c=__name__+\".doMoveFrames(\\\"1\\\",\\\"0\\\")\")\n\tmaya.button('aTMmovePAnim>',l='>>> anim',w=88,c=__name__+\".doMoveFrames(\\\"1\\\",\\\"1\\\")\")\n\tmaya.setParent( '..' )\n\tmaya.rowLayout( nc=5, cw5=(60,88,87,88,88),cl5=[\"right\",\"right\",\"right\",\"left\",\"left\"])\n\tmaya.text( l='' )\n\tmaya.button('aTMkeyPrevPose',l='Key PREV pose',w=88,c=__name__+\".doSetTweenKey(\\\"setPoseKey\\\",\\\"prev\\\")\")\n\tmaya.button('aTMkeyLinePose',l='Key linear pose',w=87,c=__name__+\".doSetTweenKey(\\\"setPoseKey\\\",\\\"line\\\")\")\n\tmaya.button('aTMkeyFlowPose',l='Key flow pose',w=88,c=__name__+\".doSetTweenKey(\\\"setPoseKey\\\",\\\"flow\\\")\")\n\tmaya.button('aTMkeyNextPose',l='Key NEXT pose',w=88,c=__name__+\".doSetTweenKey(\\\"setPoseKey\\\",\\\"next\\\")\")\n\tmaya.setParent( '..' )\n\tmaya.rowLayout( nc=3, cw3=(60,176,175),cl3=[\"right\",\"center\",\"center\"])\n\tmaya.text( l='' )\n\tmaya.button('aTMsetKeysAsBreakdown',l='Set keys as breakdown',w=176,c=__name__+\".doSetKeyMode(1)\")\n\tmaya.button('aTMsetKeysAsPose',l='Set keys as pose',w=175,c=__name__+\".doSetKeyMode(0)\")\n\tmaya.setParent( '..' )\n\tmaya.frameLayout('aTMGroupsLayout',l=\"Groups\",bs=\"etchedOut\",w=411,cll=1,cl=-aTMgroupsStatus+1,vis=aTMgroupsStatus,p='aTMframeLayoutParent')\n\tmaya.columnLayout(rs=3,adj=0)\n\tmaya.rowLayout()\n\tmaya.checkBoxGrp('aTMdoTweenOn',cl2=[\"left\",\"left\"],ncb=2, l=\"Tween on\", la2=['Selected', 'List'],va2 = [1,0],en=1,cw3=[67,70,70],cl3=[\"left\",\"left\",\"left\"],cc=__name__+\".doSetaTMactionTime()\")\n\tmaya.setParent( '..' )\n\tmaya.rowLayout()\n\tmaya.radioButtonGrp('aTMorganizeByRadiobutton',cl2=[\"left\",\"left\"],l='Organize by',la2=['Object', 'Channels'],cw3=[67,70,70],nrb=2,en=0,sl=1,cl3=[\"left\",\"left\",\"left\"] )\n\tmaya.setParent( '..' )\n\tmaya.textFieldButtonGrp('aTMinputSetName',text='Type set name...',buttonLabel='Create set',cw2=[158,70] ,co2=[0,50])\n\tmaya.rowLayout( nc=3, cw3=(150,8,50))\n\tmaya.textScrollList('aTMtweenList',h=230,nr=16,ams=1,w=150,a=['one','two','three','four','five','six','seven','eight','nine','ten'],en=0,shi=4,sc=\"print \\\"costam\\\"\")\n\tmaya.text( l='' )\n\tmaya.columnLayout()\n\tmaya.button('aTMdeleteSet',l='Delete set',w=73,en=0,c=__name__+\".doSetTweenKey(\\\"button\\\",180)\")\n\tmaya.text( l='' )\n\tmaya.text( l='' )\n\tmaya.button('aTMgoIn>',l='In > ]',w=73,en=0,c=__name__+\".doSetTweenKey(\\\"button\\\",180)\")\n\tmaya.button('aTMgoOut>',l='[ > Out',w=73,en=0,c=__name__+\".doSetTweenKey(\\\"button\\\",180)\")\n\tmaya.text( l='' )\n\tmaya.button('aTMloadFile',l='Load file',w=73,en=0,c=__name__+\".doSetTweenKey(\\\"button\\\",180)\")\n\tmaya.button('aTMloadRigg',l='Load rig',w=73,en=0,c=__name__+\".doSetTweenKey(\\\"button\\\",180)\")\n\tmaya.text( l='' )\n\tmaya.button('aTMsaveFile',l='Save file',w=73,en=0,c=__name__+\".doSetTweenKey(\\\"button\\\",180)\")\n\tmaya.setParent( '..' )\n\tmaya.frameLayout('aTMghostsLayout',l=\"Ghosts\",bs=\"etchedOut\",w=411,cll=1,cl=-aTMghostsStatus+1,vis=aTMghostsStatus,p='aTMframeLayoutParent')\n\tmaya.columnLayout(rs=3,adj=0)\n\tmaya.rowLayout(nc=2, cw2=(60,351))\n\tmaya.intFieldGrp('aTMGhostsInt',nf=2,l='before',el='after',v1=-2,v2=2)\n\tmaya.setParent( '..' )\n\tmaya.rowLayout( nc=3, cw3=(60,160,191),cl3=[\"right\",\"center\",\"center\"],vis=1)\n\tmaya.text( l='' )\n\tmaya.attrColorSliderGrp('aTMbeforeColorSlider',l=\"\",sb=0,cw4=[80,75,1,1])\n\tmaya.attrColorSliderGrp('aTMafterColorSlider',l=\"\",sb=0,cw4=[1,75,1,1])\n\tmaya.setParent( '..' )\n\tmaya.rowLayout( nc=4, cw4=(60,117,117,117),cl4=[\"right\",\"center\",\"center\",\"center\"])\n\tmaya.text( l='' )\n\tmaya.button('aTMGhostsCreate',l='Create ghosts',w=117,c=__name__+\".doGhosts(2)\")\n\tmaya.button('aTMGhostsDelete',l='Delete ghost',w=117,c=__name__+\".doGhosts(1)\")\n\tmaya.button('aTMGhostsDeleteAll',l='Delete all ghosts',w=117,c=__name__+\".doGhosts(0)\")\n\tmaya.setParent( '..' )\n\tmaya.frameLayout('aTMkeyToolsLayout',l=\"Key tools\",bs=\"etchedOut\",w=411,cll=1,cl=-aTMkeyToolsStatus+1,vis=aTMkeyToolsStatus,p='aTMframeLayoutParent')\n\tmaya.columnLayout(rs=3,adj=0)\n\tmaya.rowLayout( nc=3, cw3=(60,176,175),cl3=[\"right\",\"center\",\"center\"],vis=1)\n\tmaya.text( l='' )\n\tmaya.button('aTMsnapKeysToCurrentFrame',l='Snap keys to current frame',w=176,c=__name__+\".doSetTweenKey(\\\"button\\\",150)\")\n\tmaya.button('aTMsnapAllKaysToFrames',l='Snap ALL kays to frames',w=175,c=__name__+\".doSetTweenKey(\\\"button\\\",150)\")\n\tmaya.setParent( '..' )\n\tmaya.rowLayout( nc=3, cw3=(60,176,175),cl3=[\"right\",\"center\",\"center\"],vis=1)\n\tmaya.text( l='' )\n\tmaya.button('aTMconvKeysToStep',l='Convert keys to STEP',w=176,c=__name__+\".doSetKeys(\\\"STEP\\\")\")\n\tmaya.button('aTMconvKaysToSplined',l='Convert keys to splined',w=175,c=__name__+\".doSetKeys(\\\"SPLINE\\\")\")\n\tmaya.setParent( '..' )\n\tmaya.setParent( '..' )\n\tmaya.setParent( '..' )\n\tmaya.text('aTMcopyrgts', l='Advanced Tween Machine by Blaze \\\"asblaze\\\" Andrzejewski' ,fn=\"smallPlainLabelFont\")\t\n\tmaya.showWindow(\"abzTweenMachineWindow\")\n\tmaya.window('abzTweenMachineWindow',e=1,w=438,h=255)\n\n#--------------procedura doChangeaTMWindowGrp --------------------------------------------------------------------------------------------------------------------------\ndef doChangeaTMWindowGrp(aTMwindowGrp):\n\taTMwindowHeight = maya.window('abzTweenMachineWindow',q=1,h=1)\n\tif maya.frameLayout(aTMwindowGrp,q=1,vis=1) ==0:\n\t\tmaya.frameLayout(aTMwindowGrp,e=1,cl=0,vis=1)\n\t\tmaya.frameLayout(aTMwindowGrp,e=1,cll=0)\n\t\tif aTMwindowGrp==\"aTMsettingsLayout\":\n\t\t\tmaya.window('abzTweenMachineWindow',e=1,h=aTMwindowHeight+125)\n\t\tif aTMwindowGrp==\"aTMtweenMachineLayout\":\n\t\t\tmaya.window('abzTweenMachineWindow',e=1,h=aTMwindowHeight+190)\n\t\tif aTMwindowGrp==\"aTMghostsLayout\":\n\t\t\tmaya.window('abzTweenMachineWindow',e=1,h=aTMwindowHeight+100)\n\telse:\n\t\tmaya.frameLayout(aTMwindowGrp,e=1,cll=1)\n\t\tmaya.frameLayout(aTMwindowGrp,e=1,cl=1,vis=0)\n\t\tif aTMwindowGrp==\"aTMsettingsLayout\":\n\t\t\tmaya.window('abzTweenMachineWindow',e=1,h=aTMwindowHeight-125)\n\t\tif aTMwindowGrp==\"aTMtweenMachineLayout\":\n\t\t\tmaya.window('abzTweenMachineWindow',e=1,h=aTMwindowHeight-190)\n\t\tif aTMwindowGrp==\"aTMghostsLayout\":\n\t\t\tmaya.window('abzTweenMachineWindow',e=1,h=aTMwindowHeight-100)\n\n#--------------procedura doShowAbout --------------------------------------------------------------------------------------------------------------------------\ndef doShowAbout():\n\taTMabout = \"Advanced Tween Machine v 0.9.1 LITE \\nBased on other similar scripts, but more developed.\\n\\nContact:\\nBlaze \\\"asblaze\\\" Andrzejewski\\nasblaze3d@gmail.com\\n\"\n\tmaya.confirmDialog( t='About',ma=\"center\",m=aTMabout,b=['Close'],db='Close')\n\n#--------------procedura doSetaTMactionTime --------------------------------------------------------------------------------------------------------------------------\ndef doSetaTMactionTime():\n\tglobal aTMactionTime\n\taTMactionTime = -0.356\n\n#--------------procedura doSetLinkWithMaya --------------------------------------------------------------------------------------------------------------------------\ndef doSetLinkWithMaya(state):\n\tif maya.objExists(\"aTMmayaLinkExpression\") :\n\t\tmaya.delete(\"aTMmayaLinkExpression\")\n\tif state == 1:\n\t\taTMlinkExpressionTXT =\"int $frame = frame;\\npython( \\\"abzTweenMachine.doUpdateWindowSlider(int(\\\"+$frame+\\\"))\\\");\"\n\t\taTMlinkExpression = maya.expression(s=aTMlinkExpressionTXT,n=\"aTMmayaLinkExpression\")\n\n#--------------procedura doMoveFrames --------------------------------------------------------------------------------------------------------------------------\ndef doMoveFrames(direction,whole):\n\taTMbgcOK = [0.332,0.885,0.683]\n\tcheckSelectionErrors()\n\taTMactionTime = maya.currentTime(q=1)\n\tif whole == \"1\":\n\t\taTMendTime = (maya.playbackOptions(q=1,max=1))+20000\n\telse :\n\t\taTMendTime = aTMactionTime\n\tmaya.keyframe(e=1,iub=1,t=(aTMactionTime,aTMendTime),r=1,o=\"over\",tc=direction)\n\tmaya.currentTime(aTMactionTime+int(direction))\n\tmaya.text('aTMSTATUS',e=1,l=\"OK!!!\",bgc=aTMbgcOK)  #maya\n\tmaya.text('aTMstatusInfo',e=1,bgc=aTMbgcOK)\n\tmaya.rowLayout(\"aTMstatusRowlayout\",e=1,bgc=aTMbgcOK) #maya\n\n#--------------procedura checkSelectionErrors --------------------------------------------------------------------------------------------------------------------------\ndef checkSelectionErrors():\n\tif maya.checkBoxGrp('aTMdoTweenOn',q=1,v1=1)==1 or maya.checkBoxGrp('aTMdoTweenOn',q=1,v2=1)==1: #maya\n\t\taTMcurrSelected = maya.ls(sl=1,tr=1) #maya\n\telse:\n\t\tdoPrintERROR(\"Error!!! Check \\\"Tween on\\\" option\")\n\t\tsys.exit()\t\n\tif not aTMcurrSelected:\n\t\tdoPrintERROR(\"Error!!! Select something\")\n\t\tsys.exit()\t\n\n#--------------procedura doSetKeyMode --------------------------------------------------------------------------------------------------------------------------\ndef doSetKeyMode(aTMbdMode):\n\taTMactionTime = maya.currentTime(q=1)\n\taTMbgcOK = [0.332,0.885,0.683]\n\tcheckSelectionErrors()\n\taTMkeyExists = maya.keyframe(q=1,t=(aTMactionTime,aTMactionTime),vc=1)\n\tif not aTMkeyExists:\n\t\tdoPrintERROR(\"Error!!! No keys in this frame\")\n\t\tsys.exit()\n\tmaya.keyframe(e=1,t=(aTMactionTime,aTMactionTime),bd=aTMbdMode)\n\tmaya.text('aTMSTATUS',e=1,l=\"OK!!!\",bgc=aTMbgcOK)  #maya\n\tmaya.text('aTMstatusInfo',e=1,bgc=aTMbgcOK)\n\tmaya.rowLayout(\"aTMstatusRowlayout\",e=1,bgc=aTMbgcOK) #maya\n\n#--------------procedura doGhosts --------------------------------------------------------------------------------------------------------------------------\ndef doGhosts(doSomething):\n\taTMbgcOK = [0.332,0.885,0.683]\n\tcheckSelectionErrors()\n\tif doSomething>0:\n\t\taTMshapesArray = []\n\t\taTMghostsArray = []\n\t\taTMlambertArray = []\n\t\taTMcurrentTime = maya.currentTime(q=1)\n\t\taTMcurrSelected = maya.ls(sl=1)\n\t\tif doSomething==1:\n\t\t\tmaya.select(hi=1)\n\t\t\taTMhierSelected = maya.ls(sl=1)\n\t\t\tfor obj in aTMhierSelected:\n\t\t\t\tif maya.nodeType(obj)==\"mesh\":\n\t\t\t\t\taTMghostNode = (maya.listConnections(obj+\".worldMesh[0]\"))\n\t\t\t\t\tif aTMghostNode:\n\t\t\t\t\t\taTMtoDelete = maya.listConnections(aTMghostNode,d=1,s=0)\n\t\t\t\t\t\tmaya.delete(aTMtoDelete[0])\n\t\tif doSomething==2:\n\t\t\tif maya.objExists(\"aTMghostColorHolder\") :\n\t\t\t\tif not maya.attributeQuery('beforeColor',node=\"aTMghostColorHolder\", ex=1 ) or not maya.attributeQuery('afterColor',node=\"aTMghostColorHolder\", ex=1 ):\n\t\t\t\t\tmaya.lockNode(\"aTMghostColorHolder\",l=0)\n\t\t\t\t\tmaya.delete(\"aTMghostColorHolder\")\n\t\t\tif not maya.objExists(\"aTMghostColorHolder\") :\n\t\t\t\taTMghostColorHolder = maya.createNode(\"unknown\",n=\"aTMghostColorHolder\")\n\t\t\t\tmaya.addAttr(ln=\"beforeColor\",sn=\"bc\",at=\"double3\")\n\t\t\t\tmaya.addAttr(ln=\"afterColor\",sn=\"ac\",at=\"double3\")\n\t\t\t\tmaya.addAttr(ln=\"beforeColorR\",sn=\"bcr\",at=\"double\",p=\"beforeColor\")\n\t\t\t\tmaya.addAttr(ln=\"beforeColorG\",sn=\"bcg\",at=\"double\",p=\"beforeColor\")\n\t\t\t\tmaya.addAttr(ln=\"beforeColorB\",sn=\"bcb\",at=\"double\",p=\"beforeColor\")\n\t\t\t\tmaya.addAttr(ln=\"afterColorR\",sn=\"acr\",at=\"double\",p=\"afterColor\")\n\t\t\t\tmaya.addAttr(ln=\"afterColorG\",sn=\"acg\",at=\"double\",p=\"afterColor\")\n\t\t\t\tmaya.addAttr(ln=\"afterColorB\",sn=\"acb\",at=\"double\",p=\"afterColor\")\n\t\t\t\tmaya.setAttr(aTMghostColorHolder+\".beforeColor\",0.317,0.471,0.669,typ=\"double3\")\n\t\t\t\tmaya.setAttr(aTMghostColorHolder+\".afterColor\",0,0.669,0.326,typ=\"double3\")\n\t\t\t\tmaya.lockNode(aTMghostColorHolder,l=1,ic=1)\n\t\t\t\tmaya.attrColorSliderGrp('aTMbeforeColorSlider',e=1,at=\"aTMghostColorHolder.beforeColor\")\n\t\t\t\tmaya.attrColorSliderGrp('aTMafterColorSlider',e=1,at=\"aTMghostColorHolder.afterColor\")\n\t\t\t\tmaya.select(aTMcurrSelected)\n\t\t\tmaya.select(hi=1)\n\t\t\taTMhierSelected = maya.ls(sl=1)\n\t\t\tfor obj in aTMhierSelected:\n\t\t\t\tif maya.nodeType(obj)==\"mesh\":\n\t\t\t\t\taTMshapesArray.append(obj)\n\t\t\taTMhierSelected = maya.ls()\n\t\t\tfor obj in aTMhierSelected:\n\t\t\t\tif maya.nodeType(obj)==\"snapshot\":\n\t\t\t\t\taTMconnected = maya.listConnections(obj,d=0,s=1)\n\t\t\t\t\tmaya.select(aTMconnected,hi=1)\n\t\t\t\t\taTMhierSelected = maya.ls(sl=1)\n\t\t\t\t\tmaya.delete(maya.listConnections(obj,d=1,s=0))\n\t\t\t\t\tfor mesh in aTMhierSelected:\n\t\t\t\t\t\tif maya.nodeType(mesh)==\"mesh\" and mesh not in aTMshapesArray:\n\t\t\t\t\t\t\taTMshapesArray.append(mesh)\n\t\t\tif maya.objExists(\"aTMghostContainer\") :\n\t\t\t\tmaya.delete(\"aTMghostContainer\")\n\t\t\taTMworkMode = maya.radioButtonGrp('aTMworkModeRadiobutton',q=1,sl=1)\n\t\t\tprint aTMworkMode\n\t\t\tif aTMworkMode==1: aTMghostUpdate = \"animCurve\"\n\t\t\telif aTMworkMode==2: aTMghostUpdate = \"always\"\n\t\t\taTMbeforeAfterVar = [maya.intFieldGrp('aTMGhostsInt',q=1,v1=1),maya.intFieldGrp('aTMGhostsInt',q=1,v2=1)]\n\t\t\tif aTMbeforeAfterVar[0] >-1 or aTMbeforeAfterVar[1]<1:\n\t\t\t\tdoPrintERROR(\"Error!!! Ghosts out of range\")\n\t\t\t\tsys.exit()\n\t\t\tmaya.text('aTMSTATUS',e=1,l=\"OK!!!\",bgc=aTMbgcOK)\n\t\t\tmaya.text('aTMstatusInfo',e=1,bgc=aTMbgcOK)\n\t\t\tmaya.rowLayout(\"aTMstatusRowlayout\",e=1,bgc=aTMbgcOK)\n\t\t\tif aTMbeforeAfterVar[0] <-5 or aTMbeforeAfterVar[1]>5:\n\t\t\t\tdoPrintWARNING(\"Worning!!! Ghosts above 5 may not be visible\")\t\t\t\n\t\t\taTMbeforeTransparency = 1.0/(2**((-aTMbeforeAfterVar[0])))\n\t\t\taTMafterTransparency = 0.5\n\t\t\taTMghostContainer = maya.container(n=\"aTMghostContainer\")\n\t\t\tfor i in range(1,-aTMbeforeAfterVar[0]+1):\n\t\t\t\tif maya.objExists(\"aTMbefore\"+str(i)+\"_lb\") : maya.delete(\"aTMbefore\"+str(i)+\"_lb\"),maya.delete(\"aTMbefore\"+str(i)+\"_lbSG\")\n\t\t\t\taTMlambert = maya.shadingNode(\"lambert\",au=1,n=\"aTMbefore\"+str(i)+\"_lb\")\n\t\t\t\tmaya.setAttr(aTMlambert+\".transparency\",-aTMbeforeTransparency+1,-aTMbeforeTransparency+1,-aTMbeforeTransparency+1,typ=\"double3\")\n\t\t\t\tmaya.sets(r=1,nss=1,em=1,n=aTMlambert+\"SG\")\n\t\t\t\tmaya.connectAttr(aTMlambert+\".outColor\",aTMlambert+\"SG.surfaceShader\",f=1)\n\t\t\t\taTMlambertArray.append(aTMlambert)\n\t\t\t\taTMbeforeTransparency = aTMbeforeTransparency*2\n\t\t\t\tmaya.container(aTMghostContainer,edit=1,an=aTMlambert,inc=1,ihb=1)\n\t\t\t\tmaya.container(aTMghostContainer,edit=1,an=aTMlambert+\"SG\",inc=1,ihb=1)\n\t\t\t\tmaya.connectAttr(\"aTMghostColorHolder.beforeColor\",aTMlambert+\".color\",f=1)\n\t\t\taTMlambertArray.append(\"lambert1\")\n\t\t\tfor i in range(1,aTMbeforeAfterVar[1]+1):\n\t\t\t\tif maya.objExists(\"aTMafter\"+str(i)+\"_lb\") : maya.delete(\"aTMafter\"+str(i)+\"_lb\"),maya.delete(\"aTMafter\"+str(i)+\"_lbSG\")\n\t\t\t\taTMlambert = maya.shadingNode(\"lambert\",au=1,n=\"aTMafter\"+str(i)+\"_lb\")\n\t\t\t\tmaya.setAttr(aTMlambert+\".transparency\",aTMafterTransparency,aTMafterTransparency,aTMafterTransparency,typ=\"double3\")\n\t\t\t\tmaya.sets(r=1,nss=1,em=1,n=aTMlambert+\"SG\")\n\t\t\t\tmaya.connectAttr(aTMlambert+\".outColor\",aTMlambert+\"SG.surfaceShader\",f=1)\n\t\t\t\taTMlambertArray.append(aTMlambert)\n\t\t\t\taTMafterTransparency = aTMafterTransparency+1.0/(2**(i+1))\n\t\t\t\tmaya.container(aTMghostContainer,edit=1,an=aTMlambert,inc=1,ihb=1)\n\t\t\t\tmaya.container(aTMghostContainer,edit=1,an=aTMlambert+\"SG\",inc=1,ihb=1)\n\t\t\t\tmaya.connectAttr(\"aTMghostColorHolder.afterColor\",aTMlambert+\".color\",f=1)\n\t\t\tfor shape in aTMshapesArray:\n\t\t\t\taTMghostsArrayTmp = []\n\t\t\t\taTMghostNode = maya.snapshot(shape,n=shape+\"GhostNode\",ch=1,st=0,et=-aTMbeforeAfterVar[0]+aTMbeforeAfterVar[1],i=1,u=aTMghostUpdate )\n\t\t\t\tmaya.select(aTMghostNode[0],hi=1)\n\t\t\t\taTMghostShapeList = maya.ls(sl=1)\n\t\t\t\tfor obj in aTMghostShapeList:\n\t\t\t\t\tif maya.nodeType(obj)==\"mesh\":\n\t\t\t\t\t\taTMghostsArrayTmp.append(obj)\n\t\t\t\taTMghostsArray.append(aTMghostsArrayTmp)\n\t\t\t\taTMbeforeAdl = maya.createNode('addDoubleLinear',n=aTMghostNode[1]+\"Before_adl\")\n\t\t\t\taTMafterAdl = maya.createNode('addDoubleLinear',n=aTMghostNode[1]+\"After_adl\")\n\t\t\t\tmaya.setAttr(aTMbeforeAdl+\".i2\",aTMbeforeAfterVar[0])\n\t\t\t\tmaya.setAttr(aTMafterAdl+\".i2\",aTMbeforeAfterVar[1])\n\t\t\t\tmaya.connectAttr(\"time1.outTime\",aTMbeforeAdl+\".i1\",f=1)\n\t\t\t\tmaya.connectAttr(\"time1.outTime\",aTMafterAdl+\".i1\",f=1)\n\t\t\t\tmaya.connectAttr(aTMbeforeAdl+\".o\",aTMghostNode[1]+\".startTime\",f=1)\n\t\t\t\tmaya.connectAttr(aTMafterAdl+\".o\",aTMghostNode[1]+\".endTime\",f=1)\n\t\t\t\tmaya.container(aTMghostContainer,edit=1,an=aTMghostNode)\n\t\t\t\tmaya.container(aTMghostContainer,edit=1,an=aTMbeforeAdl,inc=1,ihb=1)\n\t\t\t\tmaya.container(aTMghostContainer,edit=1,an=aTMafterAdl,inc=1,ihb=1)\n\t\t\tfor i in range(0,len(aTMghostsArray)):\n\t\t\t\tfor a in range(0,len(aTMghostsArray[i])):\n\t\t\t\t\tmaya.setAttr(aTMghostsArray[i][a]+\".overrideEnabled\",1)\n\t\t\t\t\tmaya.setAttr(aTMghostsArray[i][a]+\".overrideDisplayType\",2)\n\t\t\t\t\tmaya.setAttr(aTMghostsArray[i][a]+\".backfaceCulling\",3)\n\t\t\t\t\tif a==-aTMbeforeAfterVar[0]:\n\t\t\t\t\t\tmaya.setAttr(aTMghostsArray[i][a]+\".v\",0)\n\t\t\t\t\telse:\n\t\t\t\t\t\tmaya.disconnectAttr(aTMghostsArray[i][a]+\".instObjGroups[0]\",\"initialShadingGroup.dagSetMembers\",na=1)\n\t\t\t\t\t\tmaya.connectAttr(aTMghostsArray[i][a]+\".instObjGroups[0]\",aTMlambertArray[a]+\"SG.dagSetMembers[\"+str(i)+\"]\",f=1)\n\t\tmaya.select(aTMcurrSelected)\n\n\tif doSomething==0:\n\t\tif maya.objExists(\"aTMghostColorHolder\") :\n\t\t\tmaya.lockNode(\"aTMghostColorHolder\",l=0)\n\t\ttry:\n\t\t\tmaya.delete('aTMghostContainer')\n\t\t\tmaya.delete(\"aTMghostColorHolder\")\n\t\texcept :\n\t\t\tpass\n\t\n#--------------procedura doPrintERROR --------------------------------------------------------------------------------------------------------------------------\ndef doPrintERROR(aTMerrorMSG):\n\taTMbgcError = [0.968,0.182,0]\n\tmaya.text('aTMSTATUS',e=1,l=aTMerrorMSG,bgc=aTMbgcError)\n\tmaya.text('aTMstatusInfo',e=1,bgc=aTMbgcError)\n\tmaya.rowLayout(\"aTMstatusRowlayout\",e=1,bgc=aTMbgcError)\n\n#--------------procedura doPrintWARNING --------------------------------------------------------------------------------------------------------------------------\ndef doPrintWARNING(aTMwarningMSG):\n\taTMbgcWarning = [0.767,0.124,0.872]\n\tmaya.text('aTMSTATUS',e=1,l=aTMwarningMSG,bgc=aTMbgcWarning)\n\tmaya.text('aTMstatusInfo',e=1,bgc=aTMbgcWarning)\n\tmaya.rowLayout(\"aTMstatusRowlayout\",e=1,bgc=aTMbgcWarning)\n\t\n#--------------procedura collectSettingsState --------------------------------------------------------------------------------------------------------------------------\ndef collectSettingsState():\n\tglobal aTMworkMode\n\tglobal aTMmayaLink\n\tglobal aTMtweenBetweenValue\n\tglobal aTMkeyTangentValue\t\n\tglobal aTMkeyTypeValue\n\tglobal aTMpredictArcValue\n\tglobal aTMpredictVar\n\taTMworkMode = maya.radioButtonGrp('aTMworkModeRadiobutton',q=1,sl=1) #maya\n\taTMmayaLink = maya.radioButtonGrp('aTMmayaLinkRadiobutton',q=1,sl=1) #maya\n\taTMtweenBetweenValue = maya.radioButtonGrp('aTMtweenBetweenRadiobutton',q=1,sl=1) #maya\n\taTMkeyTangentValue = maya.radioButtonGrp('aTMkeyTangentRadiobutton',q=1,sl=1) #maya\n\taTMkeyTypeValue = maya.radioButtonGrp('aTMkeyTypeRadiobutton',q=1,sl=1) #maya\n\taTMpredictArcValue = [maya.checkBoxGrp('aTMpredictArcCheckBox',q=1,v1=1),maya.checkBoxGrp('aTMpredictArcCheckBox',q=1,v2=1)] #maya\n\taTMpredictVar = maya.floatFieldGrp('aTMpredictVarCheckBox',q=1,v1=1) #maya\n\n#--------------procedura Glowna --------------------------------------------------------------------------------------------------------------------------\t\ndef doSetTweenKey(inputType,value):\n\n\tglobal aTMstatus\n\tglobal aTMactionTime\n\tglobal aTMtweenMachineCollect\n\tglobal aTMlastSelected\n\tglobal aTManimCurvesArray\n\tglobal aTManimChannelsArray\n\tglobal aTMerror\n\tglobal aTMwarning\n\tglobal aTMbgColor\n\tglobal aTMworkMode\n\tglobal aTMtweenBetweenValue\n\tglobal aTMtangentOutValueArray\n\tglobal aTMtangentInValueArray\n\tglobal aTMkeyTypeValue\n\tglobal aTMpredictArcValue\n\tglobal aTMpredictVar\n\tglobal aTMkeyTangentValue\n\tglobal aTMprevKeysArray\n\tglobal aTMnextKeysArray\n\tglobal aTMprevPoseArray\n\tglobal aTMnextPoseArray\n\tglobal aTMminPrevKeysArcArray\n\tglobal aTMmaxPrevKeysArcArray\n\tglobal aTMminNextKeysArcArray\n\tglobal aTMmaxNextKeysArcArray\n\tglobal aTMminPrevPoseArcArray\n\tglobal aTMmaxPrevPoseArcArray\n\tglobal aTMminNextPoseArcArray\n\tglobal aTMmaxNextPoseArcArray\n\tglobal aTMlastKeysTimeArray\n\tglobal aTMcomingKeysTimeArray\n\tglobal aTMlastPoseTimeArray\n\tglobal aTMcomingPoseTimeArray\n\tglobal aTMprevKeysArcArray\n\tglobal aTMnextKeysArcArray\n\tglobal aTMprevPoseArcArray\n\tglobal aTMnextPoseArcArray\n\t\n\taTMbgcOK = [0.332,0.885,0.683]\n\taTMcurrentTime = maya.currentTime(q=1) #maya\n\t\n#--------------sprawdzanie postawowych bledow\n\tif maya.checkBoxGrp('aTMdoTweenOn',q=1,v1=1)==1 or maya.checkBoxGrp('aTMdoTweenOn',q=1,v2=1)==1: #maya\n\t\taTMcurrSelected = maya.ls(sl=1,tr=1) #maya\n\telse:\n\t\tdoPrintERROR(\"Error!!! Check \\\"Tween on\\\" option\")\n\t\tsys.exit()\t\n\tif not aTMcurrSelected:\n\t\tdoPrintERROR(\"Error!!! Select something\")\n\t\tsys.exit()\t\t\n\tif inputType == \"button\":\n\t\tmaya.floatSliderGrp('aTMmainFloatSliderGrp',e=1,v=value) #maya\n\tif aTMactionTime!=aTMcurrentTime or aTMlastSelected!=aTMcurrSelected:\n\n#--------------jednorazowy pobor danych z krzywych (wyrzucenie breakdownow z listy i zbudowanie infa o zakresie animacji oraz pozycji kluczy)\n\t\taTMerror = 0\n\t\taTManimCurvesArray = []\n\t\taTManimChannelsArray = []\n\t\taTManimValueArray = []\n\t\taTManimTimeArray = []\n\t\taTManimTimeGloalArray = []\n\t\taTManimTimeList = []\n\t\taTManimKeyPoseArray = []\n\t\taTManimTangOutArray = []\n\t\taTMtangentOutValueArray = []\n\t\taTMtangentInValueArray = []\n\t\taTMprevKeysLinearDataArray = []\n\t\taTMnextKeysLinearDataArray = []\n\t\taTMprevPoseLinearDataArray = []\n\t\taTMnextPoseLinearDataArray = []\n\t\taTMprevKeysArray = []\n\t\taTMnextKeysArray = []\n\t\taTMprevPoseArray = []\n\t\taTMnextPoseArray = []\n\t\taTMlastKeysTimeArray = []\n\t\taTMcomingKeysTimeArray = []\n\t\taTMlastPoseTimeArray = []\n\t\taTMcomingPoseTimeArray = []\n\t\taTMminPrevKeysArcArray = []\n\t\taTMmaxPrevKeysArcArray = []\n\t\taTMminNextKeysArcArray = []\n\t\taTMmaxNextKeysArcArray = []\n\t\taTMminPrevPoseArcArray = []\n\t\taTMmaxPrevPoseArcArray = []\n\t\taTMminNextPoseArcArray = []\n\t\taTMmaxNextPoseArcArray = []\n\t\taTMprevKeysArcArray = []\n\t\taTMnextKeysArcArray = []\n\t\taTMprevPoseArcArray = []\n\t\taTMnextPoseArcArray = []\n\t\taTMstatus = \"OK!!!\"\t\n\t\taTMwarning = 0\n\t\taTMbgColor = aTMbgcOK\n\t\taTMtweenBetweenValue = maya.radioButtonGrp('aTMtweenBetweenRadiobutton',q=1,sl=1) #maya\n\t\taTMkeyTangentValue = maya.radioButtonGrp('aTMkeyTangentRadiobutton',q=1,sl=1) #maya\n\t\taTMselectedChannels = maya.channelBox(\"mainChannelBox\",q=1,sma=1)#maya\t<-\n\t\tfor aTMtransform in aTMcurrSelected:\n\t\t\taTManimCurves = maya.findKeyframe(aTMtransform,curve=True) #maya\n\t\t\tif aTManimCurves:\n\t\t\t\tfor aTManimCurve in aTManimCurves:\n\t\t\t\t\taTManimChannelTMP = maya.connectionInfo(aTManimCurve+\".o\",dfs=1) #maya\t<-\n\t\t\t\t\taTManimChannelSN = maya.attributeName(aTManimChannelTMP,s=1) #maya\t<-\n\t\t\t\t\tif aTMselectedChannels and aTManimChannelSN not in aTMselectedChannels: #maya\t<-\n\t\t\t\t\t\t\tcontinue #maya\t<-\n\t\t\t\t\telse: #maya\t<-\n\t\t\t\t\t\taTManimCurvesArray.append(aTManimCurve)\n\t\t\t\t\t\taTManimChannelsArray.append(aTManimChannelTMP) #maya\n\t\t\t\t\t\taTManimValueTMP = maya.keyframe(aTManimCurve,q=1,vc=1) #maya\n\t\t\t\t\t\taTManimTimeTMP = maya.keyframe(aTManimCurve,q=1,tc=1) #maya\n\t\t\t\t\t\taTManimBreakTMP = maya.keyframe(aTManimCurve,q=1,bd=1) #maya\n\t\t\t\t\t\taTManimTangOutTMP = maya.keyTangent(aTManimCurve,q=1,ott=1) #maya\n\t\t\t\t\t\tif aTManimBreakTMP and aTMtweenBetweenValue ==2:\n\t\t\t\t\t\t\tfor aTMbreakdown in aTManimBreakTMP:\n\t\t\t\t\t\t\t\taTMindex = aTManimTimeTMP.index(aTMbreakdown)\n\t\t\t\t\t\t\t\taTManimTimeTMP.remove(aTMbreakdown)\n\t\t\t\t\t\t\t\taTManimValueTMP.pop(aTMindex)\n\t\t\t\t\t\t\t\taTManimTangOutTMP.pop(aTMindex)\n\t\t\t\t\t\taTManimTimeList = aTManimTimeList + aTManimTimeTMP\n\t\t\t\t\t\taTManimTimeArray.append(aTManimTimeTMP)\n\t\t\t\t\t\taTManimKeyPoseArray.append([1] * len(aTManimTimeTMP))\n\t\t\t\t\t\taTManimValueArray.append(aTManimValueTMP)\n\t\t\t\t\t\taTManimTangOutArray.append(aTManimTangOutTMP)\n\t\taTManimTimeGlobalArray = sorted(set(aTManimTimeList))\t\t\n\t\taTMactionTime = aTMcurrentTime\n\t\taTMlastSelected = aTMcurrSelected\n\t\tif not aTManimCurvesArray:\n\t\t\tdoPrintERROR(\"Error!!! No animated object\")\n\t\t\tsys.exit()\t\n\t\tif aTMcurrentTime < aTManimTimeGlobalArray[0] or aTMcurrentTime >aTManimTimeGlobalArray[len(aTManimTimeGlobalArray)-1]:\n\t\t\tdoPrintERROR(\"Error!!! Timeline behind anmation range\")\n\t\t\tsys.exit()\t\n\t\tif aTMcurrentTime == aTManimTimeGlobalArray[0] or aTMcurrentTime ==aTManimTimeGlobalArray[len(aTManimTimeGlobalArray)-1]:\n\t\t\tdoPrintERROR(\"Error!!! You can't add breakdown at first or last animation frame\")\n\t\t\tsys.exit()\t\n\n#-------------- uzupelnianie danych z krzywych o klucze widma 1- fizyczny klucz, 2- pierwszy i ostatni klucz (widmo), 0 - klucz widmo\n\t\tfor i in range(0,len(aTManimCurvesArray)):\n\t\t\tif len(aTManimTimeGlobalArray) != len(aTManimTimeArray[i]):\n\t\t\t\taTMmissedFramesArray = list(sorted(set(aTManimTimeGlobalArray).difference(set(aTManimTimeArray[i]))))\n\t\t\t\tfor aTMframe in aTMmissedFramesArray:\n\t\t\t\t\taTMindex = aTManimTimeGlobalArray.index(aTMframe)\n\t\t\t\t\taTMposeVarTMP = 0\n\t\t\t\t\tif \taTMframe<aTManimTimeArray[i][0]:\n\t\t\t\t\t\taTMprevFrameTMP = aTMframe\n\t\t\t\t\t\taTMprevVarTMP = aTManimValueArray[i][aTMindex]\n\t\t\t\t\t\taTMposeVarTMP = 2\n\t\t\t\t\telse:\n\t\t\t\t\t\taTMprevFrameTMP = aTManimTimeArray[i][aTMindex-1]\n\t\t\t\t\t\taTMprevVarTMP = aTManimValueArray[i][aTMindex-1]\n\t\t\t\t\tif \taTMindex==len(aTManimTimeArray[i]):\n\t\t\t\t\t\taTMnextFrameTMP = aTMframe\n\t\t\t\t\t\taTMnextVarTMP = aTManimValueArray[i][aTMindex-1]\n\t\t\t\t\telse:\n\t\t\t\t\t\taTMnextFrameTMP = aTManimTimeArray[i][aTMindex]\n\t\t\t\t\t\taTMnextVarTMP = aTManimValueArray[i][aTMindex]\n\t\t\t\t\tif aTMindex==len(aTManimTimeGlobalArray)-1: aTMposeVarTMP = 2\n\t\t\t\t\taTManimValueArray[i].insert(aTMindex,((aTMnextVarTMP-aTMprevVarTMP)/(aTMnextFrameTMP-aTMprevFrameTMP) * (aTMframe-aTMprevFrameTMP) + aTMprevVarTMP))\n\t\t\t\t\taTManimTimeArray[i].insert(aTMindex,aTMframe)\n\t\t\t\t\taTManimKeyPoseArray[i].insert(aTMindex,aTMposeVarTMP)\n\t\t\t\t\tif aTMindex-1<0: aTMprevTangOutTMP=\"linear\"\n\t\t\t\t\telse: aTMprevTangOutTMP=aTManimTangOutArray[i][aTMindex-1]\n\t\t\t\t\taTManimTangOutArray[i].insert(aTMindex,str(aTMprevTangOutTMP))\n\t\t\tif aTMactionTime in aTManimTimeGlobalArray:\n\t\t\t\taTMindexTMP = aTManimTimeGlobalArray.index(aTMactionTime)\n\t\t\t\taTManimValueArray[i].pop(aTMindexTMP)\n\t\t\t\taTManimTimeArray[i].pop(aTMindexTMP)\n\t\t\t\taTManimKeyPoseArray[i].pop(aTMindexTMP)\n\t\t\t\tif i == len(aTManimCurvesArray)-1:\n\t\t\t\t\taTManimTimeGlobalArray.pop(aTMindexTMP)\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n#\t\t\t\t\tdoPrintWARNING(\"Warning!!! You are changing key pose\")\n#\t\t\t\t\taTMwarning = 1\n\t\t\t\t\t\n#-------------- zrobmy cos - dane do mnozenia Linear\n\t\taTMwarningTMP = []\n\t\tfor i in range(0,len(aTManimCurvesArray)):\n\t\t\tfor a in range(0,len(aTManimTimeGlobalArray)):\n\t\t\t\tif aTManimTimeGlobalArray[a] <= aTMactionTime <= aTManimTimeGlobalArray[a+1]:\n\t\t\t\t\taTMprevPoseLinearVal = (aTManimValueArray[i][a])\n\t\t\t\t\taTMprevPoseLinearTime = (aTManimTimeArray[i][a])\n\t\t\t\t\tif a-1<0:\n\t\t\t\t\t\taTMprev2PoseLinearVal =aTManimValueArray[i][a]\n\t\t\t\t\t\taTMprev2PoseLinearTime =aTManimTimeArray[i][a]\n\t\t\t\t\telse:\n\t\t\t\t\t\taTMprev2PoseLinearVal =aTManimValueArray[i][a-1]\n\t\t\t\t\t\taTMprev2PoseLinearTime =aTManimTimeArray[i][a-1]\n\t\t\t\t\taTMnextPoseLinearVal =(aTManimValueArray[i][a+1])\n\t\t\t\t\taTMnextPoseLinearTime =(aTManimTimeArray[i][a+1])\n\t\t\t\t\tif a+2>=len(aTManimTimeGlobalArray):\n\t\t\t\t\t\taTMnext2PoseLinearVal =aTManimValueArray[i][a+1]\n\t\t\t\t\t\taTMnext2PoseLinearTime =aTManimTimeArray[i][a+1]\n\t\t\t\t\telse:\n\t\t\t\t\t\taTMnext2PoseLinearVal =aTManimValueArray[i][a+2]\n\t\t\t\t\t\taTMnext2PoseLinearTime =aTManimTimeArray[i][a+2]\n\t\t\t\t\tb=a\n\t\t\t\t\tif aTManimKeyPoseArray[i][a]==0:\t\n\t\t\t\t\t\taTMwarningTMP.append(1)\n\t\t\t\t\t\twhile aTManimKeyPoseArray[i][b]==0:\tb=b-1\n\t\t\t\t\t\taTMprevKeysLinearVal =(aTManimValueArray[i][b])\n\t\t\t\t\t\taTMprevKeysLinearTime =(aTManimTimeArray[i][b])\n\t\t\t\t\telse:\n\t\t\t\t\t\taTMprevKeysLinearVal =(aTManimValueArray[i][a])\n\t\t\t\t\t\taTMprevKeysLinearTime =(aTManimTimeArray[i][b])\n\t\t\t\t\tc=b-1\n\t\t\t\t\tif c<0:\n\t\t\t\t\t\taTMprev2KeysLinearVal = (aTManimValueArray[i][b])\n\t\t\t\t\t\taTMprev2KeysLinearTime = (aTManimTimeArray[i][b])\n\t\t\t\t\telif aTManimKeyPoseArray[i][c]==0:\n\t\t\t\t\t\twhile aTManimKeyPoseArray[i][c]==0:\tc=c-1\n\t\t\t\t\t\taTMprev2KeysLinearVal = (aTManimValueArray[i][c])\n\t\t\t\t\t\taTMprev2KeysLinearTime = (aTManimTimeArray[i][c])\n\t\t\t\t\telse:\n\t\t\t\t\t\taTMprev2KeysLinearVal = (aTManimValueArray[i][b-1])\n\t\t\t\t\t\taTMprev2KeysLinearTime = (aTManimTimeArray[i][b-1])\n\t\t\t\t\tb=a+1\n\t\t\t\t\tif aTManimKeyPoseArray[i][a+1]==0:\n\t\t\t\t\t\taTMwarningTMP.append(2)\n\t\t\t\t\t\twhile aTManimKeyPoseArray[i][b]==0:\tb=b+1\n\t\t\t\t\t\taTMnextKeysLinearVal =(aTManimValueArray[i][b])\n\t\t\t\t\t\taTMnextKeysLinearTime =(aTManimTimeArray[i][b])\n\t\t\t\t\telse:\n\t\t\t\t\t\taTMnextKeysLinearVal =(aTManimValueArray[i][a+1])\n\t\t\t\t\t\taTMnextKeysLinearTime =(aTManimTimeArray[i][a+1])\n\t\t\t\t\tc=b+1\n\t\t\t\t\tif c>=len(aTManimTimeGlobalArray):\n\t\t\t\t\t\taTMnext2KeysLinearVal = (aTManimValueArray[i][b])\n\t\t\t\t\t\taTMnext2KeysLinearTime = (aTManimTimeArray[i][b])\n\t\t\t\t\telif aTManimKeyPoseArray[i][c]==0:\n\t\t\t\t\t\twhile aTManimKeyPoseArray[i][c]==0:\tc=c+1\n\t\t\t\t\t\taTMnext2KeysLinearVal = (aTManimValueArray[i][c])\n\t\t\t\t\t\taTMnext2KeysLinearTime = (aTManimTimeArray[i][c])\n\t\t\t\t\telse:\n\t\t\t\t\t\taTMnext2KeysLinearVal = (aTManimValueArray[i][b+1])\n\t\t\t\t\t\taTMnext2KeysLinearTime = (aTManimTimeArray[i][b+1])\n\t\t\t\t\taTMminPrevKeysValue = aTMprevKeysLinearVal\n\t\t\t\t\tif aTMprevKeysLinearTime==aTMprev2KeysLinearTime: aTMmaxPrevKeysValue = aTMnextKeysLinearVal\n\t\t\t\t\telse: aTMmaxPrevKeysValue = aTMprevKeysLinearVal+((aTMprev2KeysLinearVal-aTMprevKeysLinearVal) / (aTMprev2KeysLinearTime-aTMprevKeysLinearTime)) * (aTMnextKeysLinearTime-aTMprevKeysLinearTime)\n\t\t\t\t\tif aTMnextKeysLinearTime==aTMnext2KeysLinearTime: aTMminNextKeysValue = aTMprevKeysLinearVal\n\t\t\t\t\telse: aTMminNextKeysValue = aTMnextKeysLinearVal-((aTMnext2KeysLinearVal-aTMnextKeysLinearVal) / (aTMnext2KeysLinearTime-aTMnextKeysLinearTime)) * (aTMnextKeysLinearTime-aTMprevKeysLinearTime)\n\t\t\t\t\taTMmaxNextKeysValue = aTMnextKeysLinearVal\n\t\t\t\t\taTMminPrevPoseValue = aTMprevPoseLinearVal\n\t\t\t\t\tif aTMprevPoseLinearTime==aTMprev2PoseLinearTime: aTMmaxPrevPoseValue = aTMnextPoseLinearVal\n\t\t\t\t\telse: aTMmaxPrevPoseValue = aTMprevPoseLinearVal+((aTMprev2PoseLinearVal-aTMprevPoseLinearVal) / (aTMprev2PoseLinearTime-aTMprevPoseLinearTime)) * (aTMnextPoseLinearTime-aTMprevPoseLinearTime)\n\t\t\t\t\tif aTMnextPoseLinearTime==aTMnext2PoseLinearTime: aTMminNextPoseValue = aTMprevPoseLinearVal\n\t\t\t\t\telse: aTMminNextPoseValue = aTMnextPoseLinearVal-((aTMnext2PoseLinearVal-aTMnextPoseLinearVal) / (aTMnext2PoseLinearTime-aTMnextPoseLinearTime)) * (aTMnextPoseLinearTime-aTMprevPoseLinearTime)\n\t\t\t\t\taTMmaxNextPoseValue = aTMnextPoseLinearVal\n\t\t\t\t\taTMprevKeysArray.append(aTMprevKeysLinearVal)\n\t\t\t\t\taTMnextKeysArray.append(aTMnextKeysLinearVal)\n\t\t\t\t\taTMprevPoseArray.append(aTMprevPoseLinearVal)\n\t\t\t\t\taTMnextPoseArray.append(aTMnextPoseLinearVal)\n\t\t\t\t\taTMminPrevKeysArcArray.append(aTMminPrevKeysValue)\n\t\t\t\t\taTMmaxPrevKeysArcArray.append(aTMmaxPrevKeysValue)\n\t\t\t\t\taTMminNextKeysArcArray.append(aTMminNextKeysValue)\n\t\t\t\t\taTMmaxNextKeysArcArray.append(aTMmaxNextKeysValue)\n\t\t\t\t\taTMminPrevPoseArcArray.append(aTMminPrevPoseValue)\n\t\t\t\t\taTMmaxPrevPoseArcArray.append(aTMmaxPrevPoseValue)\n\t\t\t\t\taTMminNextPoseArcArray.append(aTMminNextPoseValue)\n\t\t\t\t\taTMmaxNextPoseArcArray.append(aTMmaxNextPoseValue)\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\taTMprevKeysArcArray.append(aTMprev2KeysLinearVal)\n\t\t\t\t\taTMnextKeysArcArray.append(aTMnext2KeysLinearVal)\n\t\t\t\t\taTMprevPoseArcArray.append(aTMprev2PoseLinearVal)\n\t\t\t\t\taTMnextPoseArcArray.append(aTMnext2PoseLinearVal)\n\t\t\t\t\t\n\t\t\n\t\t\t\t\taTMlastKeysTimeArray.append(aTMprevKeysLinearTime)\n\t\t\t\t\taTMcomingKeysTimeArray.append(aTMnextKeysLinearTime)\n\t\t\t\t\taTMlastPoseTimeArray.append(aTMprevPoseLinearTime)\n\t\t\t\t\taTMcomingPoseTimeArray.append(aTMnextPoseLinearTime)\n\t\t\t\t\tif aTMkeyTangentValue ==1:\n\t\t\t\t\t\taTMtangentInValueArray.append(\"spline\")\n\t\t\t\t\t\taTMtangentOutValueArray.append(\"spline\")\n\t\t\t\t\tif aTMkeyTangentValue ==2:\n\t\t\t\t\t\taTMtangentInValueArray.append(\"linear\")\n\t\t\t\t\t\taTMtangentOutValueArray.append(\"step\")\n\t\t\t\t\tif aTMkeyTangentValue ==3:\n\t\t\t\t\t\taTMtangentInValueArray.append(\"linear\")\n\t\t\t\t\t\taTMtangentOutValueArray.append(\"linear\")\n\t\tif aTMwarningTMP:\n\t\t\tif len(aTMwarningTMP)==1 and aTMwarningTMP[0] == 1: doPrintWARNING(\"Warning!!! Previous pose is not fully keyed - can be distorted\")\n\t\t\telif len(aTMwarningTMP)==1 and aTMwarningTMP[0] == 2: doPrintWARNING(\"Warning!!! Next pose is not fully keyed - can be distorted\")\n\t\t\telse: doPrintWARNING(\"Warning!!! Both poses are not fully keyed - can be distorted\")\n\t\t\taTMwarning = 1\n\n#-------------------------------------------------------------- WYKONANIE\n\tif aTMerror == 0:\n\t\tif aTMtweenMachineCollect ==1:\n\t\t\taTMworkMode = maya.radioButtonGrp('aTMworkModeRadiobutton',q=1,sl=1) #maya\n\t\t\taTMtweenBetweenValue = maya.radioButtonGrp('aTMtweenBetweenRadiobutton',q=1,sl=1) #maya\n\t\t\taTMpredictArcValue = [maya.checkBoxGrp('aTMpredictArcCheckBox',q=1,v1=1),maya.checkBoxGrp('aTMpredictArcCheckBox',q=1,v2=1)] #maya\n\t\t\taTMkeyTypeValue = maya.radioButtonGrp('aTMkeyTypeRadiobutton',q=1,sl=1) #maya\n\t\t\taTMpredictVar = maya.floatFieldGrp('aTMpredictVarCheckBox',q=1,v1=1) #maya\n\t\t\tif aTMworkMode ==1:\n\t\t\t\tmaya.select(aTManimCurvesArray,tgl=1) #maya\n\t\t\t\tfor i in range(0,len(aTManimCurvesArray)):\n\t\t\t\t\tmaya.disconnectAttr(aTManimCurvesArray[i]+\".o\",aTManimChannelsArray[i][0]) #maya\n\t\taTMnewKeyValueArray = []\n\t\tsliderValue = (maya.floatSliderGrp('aTMmainFloatSliderGrp',q=1,v=1)/100) #maya\n\t\trad_to_deg = math.degrees\n\t\tatan = math.atan\n\t\tcos = math.cos\n\t\tsin = math.sin\n\t\tPI = math.pi\n\t\taTMparametr=aTMpredictVar+1\n\t\taTMamplituda= 1/(sin((aTMparametr/2-1/3)*PI))\n\t\taTMtranslateSTR = \"translate\"\n\t\taTMrotateSTR = \"rotate\"\n\t\tfor i in range(0,len(aTManimChannelsArray)):\n\t\t\tif aTMpredictArcValue[0]==1 and aTManimChannelsArray[i][0].find(aTMtranslateSTR,len(aTManimChannelsArray[i][0])-12)>0:\n\t\t\t\tif aTMtweenBetweenValue ==1:\n\t\t\t\t\taTMphantomAnimCurve1 =aTMminPrevPoseArcArray[i]+((aTMmaxPrevPoseArcArray[i]-aTMminPrevPoseArcArray[i])*sliderValue)\n\t\t\t\t\taTMphantomAnimCurve2 =aTMminNextPoseArcArray[i]+((aTMmaxNextPoseArcArray[i]-aTMminNextPoseArcArray[i])*sliderValue)\n\t\t\t\t\tif sliderValue<0: aTMnewKeyValue =aTMprevPoseArcArray[i]+((aTMprevPoseArray[i]-aTMprevPoseArcArray[i])*(sliderValue+1))\n\t\t\t\t\telif sliderValue>1: aTMnewKeyValue =aTMnextPoseArray[i]+((aTMnextPoseArcArray[i]-aTMnextPoseArray[i])*(sliderValue-1))\n\t\t\t\t\telse: aTMnewKeyValue =((aTMphantomAnimCurve1+aTMphantomAnimCurve2)/2)+(-cos(sliderValue*PI))*((aTMphantomAnimCurve2-aTMphantomAnimCurve1)/2)\n\t\t\t\tif aTMtweenBetweenValue ==2:\n\t\t\t\t\taTMphantomAnimCurve1 =aTMminPrevKeysArcArray[i]+((aTMmaxPrevKeysArcArray[i]-aTMminPrevKeysArcArray[i])*sliderValue)\n\t\t\t\t\taTMphantomAnimCurve2 =aTMminNextKeysArcArray[i]+((aTMmaxNextKeysArcArray[i]-aTMminNextKeysArcArray[i])*sliderValue)\n\t\t\t\t\tif sliderValue<0: aTMnewKeyValue =aTMprevKeysArcArray[i]+((aTMprevKeysArray[i]-aTMprevKeysArcArray[i])*(sliderValue+1))\n\t\t\t\t\telif sliderValue>1:aTMnewKeyValue =aTMnextKeysArray[i]+((aTMnextKeysArcArray[i]-aTMnextKeysArray[i])*(sliderValue-1))\n\t\t\t\t\telse: aTMnewKeyValue =((aTMphantomAnimCurve1+aTMphantomAnimCurve2)/2)+(-cos(sliderValue*PI))*((aTMphantomAnimCurve2-aTMphantomAnimCurve1)/2)\t\t\t\t\t\t\n\t\t\telif aTMpredictArcValue[1]==1 and aTManimChannelsArray[i][0].find(aTMrotateSTR,len(aTManimChannelsArray[i][0])-9):\t\t\t\t\t\n\t\t\t\tif aTMtweenBetweenValue ==1:\n\t\t\t\t\taTMphantomAnimCurve1 =aTMminPrevPoseArcArray[i]+((aTMmaxPrevPoseArcArray[i]-aTMminPrevPoseArcArray[i])*sliderValue)\n\t\t\t\t\taTMphantomAnimCurve2 =aTMminNextPoseArcArray[i]+((aTMmaxNextPoseArcArray[i]-aTMminNextPoseArcArray[i])*sliderValue)\n\t\t\t\t\taTMnewKeyValue =(((aTMphantomAnimCurve1+aTMphantomAnimCurve2)/2)+sin(sliderValue*PI-(aTMparametr/2-1/3)*PI)*((aTMphantomAnimCurve2-aTMphantomAnimCurve1)/2))*aTMamplituda\n\t\t\t\tif aTMtweenBetweenValue ==2:\n\t\t\t\t\taTMphantomAnimCurve1 =aTMminPrevKeysArcArray[i]+((aTMmaxPrevKeysArcArray[i]-aTMminPrevKeysArcArray[i])*sliderValue)\n\t\t\t\t\taTMphantomAnimCurve2 =aTMminNextKeysArcArray[i]+((aTMmaxNextKeysArcArray[i]-aTMminNextKeysArcArray[i])*sliderValue)\n\t\t\t\t\taTMnewKeyValue =(((aTMphantomAnimCurve1+aTMphantomAnimCurve2)/2)+sin(sliderValue*PI-(aTMparametr/2-1/3)*PI)*((aTMphantomAnimCurve2-aTMphantomAnimCurve1)/2))*aTMamplituda\n\t\t\telse:\n\t\t\t\tif aTMtweenBetweenValue ==2:\taTMnewKeyValue=(aTMnextKeysArray[i] - aTMprevKeysArray[i])*sliderValue+aTMprevKeysArray[i]\n\t\t\t\tif aTMtweenBetweenValue ==1:\taTMnewKeyValue=(aTMnextPoseArray[i] - aTMprevPoseArray[i])*sliderValue+aTMprevPoseArray[i]\t\t\t\t\n\t\t\tif aTMworkMode ==1 and inputType != \"setPoseKey\":\n\t\t\t\tmaya.setAttr(aTManimChannelsArray[i][0],aTMnewKeyValue,c=1)\n\t\t\t\taTMnewKeyValueArray.append(aTMnewKeyValue)\n\t\t\telif aTMworkMode ==2 and inputType != \"setPoseKey\":\n\t\t\t\tmaya.setKeyframe(aTManimCurvesArray[i],v=aTMnewKeyValue-1,bd=aTMkeyTypeValue-1)\n\t\t\t\tmaya.keyframe(aTManimCurvesArray[i],e=1,t=(aTMactionTime,aTMactionTime),vc=1,iub=1,r=1,o=\"over\")\n\t\t\t\tmaya.keyTangent(aTManimCurvesArray[i],e=1,t=(aTMactionTime,aTMactionTime),itt=aTMtangentInValueArray[i],ott=aTMtangentOutValueArray[i])\n\t\t\t\tif aTMkeyTangentValue ==1:\n\t\t\t\t\tif aTMprevKeysArcArray[i]<=aTMprevKeysArray[i]>=aTMnewKeyValue or aTMprevKeysArcArray[i]>=aTMprevKeysArray[i]<=aTMnewKeyValue: aTMprevOutTangent = 0\n\t\t\t\t\telse: aTMprevOutTangent = (rad_to_deg(atan((aTMnewKeyValue-aTMprevKeysArray[i])/(aTMactionTime-aTMlastKeysTimeArray[i]))))\n\t\t\t\t\tif  aTMprevKeysArray[i]<=aTMnewKeyValue>=aTMnextKeysArray[i] or aTMprevKeysArray[i]>=aTMnewKeyValue<=aTMnextKeysArray[i]: aTMthisTangent = 0\n\t\t\t\t\telse: aTMthisTangent = ((rad_to_deg(atan((aTMnewKeyValue-aTMprevKeysArray[i])/(aTMactionTime-aTMlastKeysTimeArray[i]))))+(rad_to_deg(atan((aTMnextKeysArray[i]-aTMnewKeyValue)/(aTMcomingKeysTimeArray[i]-aTMactionTime)))))/2\n\t\t\t\t\tif aTMnewKeyValue<=aTMnextKeysArray[i]>=aTMnextKeysArcArray[i] or aTMnewKeyValue>=aTMnextKeysArray[i]<=aTMnextKeysArcArray[i]: aTMnextInTangent = 0\n\t\t\t\t\telse: aTMnextInTangent = (rad_to_deg(atan((aTMnextKeysArray[i]-aTMnewKeyValue)/(aTMcomingKeysTimeArray[i]-aTMactionTime))))\n\t\t\t\t\tmaya.keyTangent(aTManimCurvesArray[i],e=1,t=(aTMlastKeysTimeArray[i],aTMlastKeysTimeArray[i]),ia=aTMprevOutTangent,oa=aTMprevOutTangent)\n\t\t\t\t\tmaya.keyTangent(aTManimCurvesArray[i],e=1,t=(aTMactionTime,aTMactionTime),ia=aTMthisTangent,oa=aTMthisTangent)\n\t\t\t\t\tmaya.keyTangent(aTManimCurvesArray[i],e=1,t=(aTMcomingKeysTimeArray[i],aTMcomingKeysTimeArray[i]),ia=aTMnextInTangent,oa=aTMnextInTangent)\n\t\t\t\tif aTMkeyTangentValue ==2:\n\t\t\t\t\tmaya.keyTangent(aTManimCurvesArray[i],e=1,t=(aTMlastKeysTimeArray[i],aTMlastKeysTimeArray[i]),ott=aTMtangentOutValueArray[i])\n\t\tif inputType == \"sliderEnd\" or inputType ==\"button\" or inputType == \"setPoseKey\":\n\t\t\taTMtweenMachineCollect = 1\n\t\t\tif aTMworkMode ==1:\n\t\t\t\tmaya.select(aTManimCurvesArray,tgl=1)\n\t\t\t\tmaya.undoInfo(swf=1) \n\t\t\t\tfor i in range(0,len(aTManimCurvesArray)):\n\t\t\t\t\tif inputType != \"setPoseKey\":\n\t\t\t\t\t\tmaya.setKeyframe(aTManimCurvesArray[i],v=aTMnewKeyValueArray[i],bd=aTMkeyTypeValue-1)\n\t\t\t\t\t\tmaya.keyTangent(aTManimCurvesArray[i],e=1,t=(aTMactionTime,aTMactionTime),itt=aTMtangentInValueArray[i],ott=aTMtangentOutValueArray[i])\n\t\t\t\t\t\tif aTMkeyTangentValue ==1:\n\t\t\t\t\t\t\tif aTMprevKeysArcArray[i]<=aTMprevKeysArray[i]>=aTMnewKeyValueArray[i] or aTMprevKeysArcArray[i]>=aTMprevKeysArray[i]<=aTMnewKeyValueArray[i]: aTMprevOutTangent = 0\n\t\t\t\t\t\t\telse: aTMprevOutTangent = (rad_to_deg(atan((aTMnewKeyValueArray[i]-aTMprevKeysArray[i])/(aTMactionTime-aTMlastKeysTimeArray[i]))))\n\t\t\t\t\t\t\tif  aTMprevKeysArray[i]<=aTMnewKeyValueArray[i]>=aTMnextKeysArray[i] or aTMprevKeysArray[i]>=aTMnewKeyValueArray[i]<=aTMnextKeysArray[i]: aTMthisTangent = 0\n\t\t\t\t\t\t\telse: aTMthisTangent = ((rad_to_deg(atan((aTMnewKeyValueArray[i]-aTMprevKeysArray[i])/(aTMactionTime-aTMlastKeysTimeArray[i]))))+(rad_to_deg(atan((aTMnextKeysArray[i]-aTMnewKeyValueArray[i])/(aTMcomingKeysTimeArray[i]-aTMactionTime)))))/2\n\t\t\t\t\t\t\tif aTMnewKeyValueArray[i]<=aTMnextKeysArray[i]>=aTMnextKeysArcArray[i] or aTMnewKeyValueArray[i]>=aTMnextKeysArray[i]<=aTMnextKeysArcArray[i]: aTMnextInTangent = 0\n\t\t\t\t\t\t\telse: aTMnextInTangent = (rad_to_deg(atan((aTMnextKeysArray[i]-aTMnewKeyValueArray[i])/(aTMcomingKeysTimeArray[i]-aTMactionTime))))\n\t\t\t\t\t\t\tmaya.keyTangent(aTManimCurvesArray[i],e=1,t=(aTMlastKeysTimeArray[i],aTMlastKeysTimeArray[i]),ia=aTMprevOutTangent,oa=aTMprevOutTangent)\n\t\t\t\t\t\t\tmaya.keyTangent(aTManimCurvesArray[i],e=1,t=(aTMactionTime,aTMactionTime),ia=aTMthisTangent,oa=aTMthisTangent)\n\t\t\t\t\t\t\tmaya.keyTangent(aTManimCurvesArray[i],e=1,t=(aTMcomingKeysTimeArray[i],aTMcomingKeysTimeArray[i]),ia=aTMnextInTangent,oa=aTMnextInTangent)\n\t\t\t\t\t\tif aTMkeyTangentValue ==2:\n\t\t\t\t\t\t\tmaya.keyTangent(aTManimCurvesArray[i],e=1,t=(aTMlastKeysTimeArray[i],aTMlastKeysTimeArray[i]),ott=aTMtangentOutValueArray[i])\n\t\t\t\tmaya.undoInfo(swf=0)\n\t\t\t\tfor i in range(0,len(aTManimCurvesArray)):\n\t\t\t\t\tmaya.connectAttr(aTManimCurvesArray[i]+\".o\",aTManimChannelsArray[i][0],f=1) #maya\n#\t\t\t\t\tmaya.keyframe(aTManimCurvesArray[i],e=1,t=(aTMactionTime,aTMactionTime),vc=1,iub=1,r=1,o=\"over\")\n\t\t\tmaya.undoInfo(swf=1) #maya\t\t\t\t\t\n\t\t\tif inputType == \"setPoseKey\":\n\t\t\t\tfor i in range(0,len(aTManimCurvesArray)):\n\t\t\t\t\tif value == \"prev\":\n\t\t\t\t\t\taTMkeyPoseTime = aTMlastPoseTimeArray[i]\n\t\t\t\t\t\taTMkeyPoseVal = aTMprevPoseArray[i]\n\t\t\t\t\tif value == \"line\":\n\t\t\t\t\t\taTMkeyPoseTime = aTMactionTime\n\t\t\t\t\t\taTMkeyPoseVal = ((aTMnextKeysArray[i]-aTMprevKeysArray[i])/(aTMcomingKeysTimeArray[i]-aTMlastKeysTimeArray[i])*(aTMactionTime-aTMlastKeysTimeArray[i]))+aTMprevKeysArray[i]\n\t\t\t\t\tif value == \"flow\":\n\t\t\t\t\t\taTMkeyPoseTime = aTMactionTime\n\t\t\t\t\t\taTMkeyPoseValTMP = maya.keyframe(aTManimCurvesArray[i],q=1,t=(aTMkeyPoseTime,aTMkeyPoseTime),ev=1)\n\t\t\t\t\t\taTMkeyPoseVal = aTMkeyPoseValTMP[0]\n\t\t\t\t\tif value == \"next\":\n\t\t\t\t\t\taTMkeyPoseTime = aTMcomingPoseTimeArray[i]\n\t\t\t\t\t\taTMkeyPoseVal = aTMnextPoseArray[i]\n\t\t\t\t\tmaya.setKeyframe(aTManimCurvesArray[i],t=(aTMkeyPoseTime,aTMkeyPoseTime),v=aTMkeyPoseVal,bd=aTMkeyTypeValue-1)\n\t\t\t\t\tmaya.keyTangent(aTManimCurvesArray[i],e=1,t=(aTMkeyPoseTime,aTMkeyPoseTime),itt=\"spline\",ott=\"spline\")\n\t\t\t\t\taTMwarning = 0\t\n\t\t\t\tdoSetaTMactionTime()\t\t\t\n\t\telse:\n\t\t\taTMtweenMachineCollect = 0\n\t\t\tmaya.undoInfo(swf=0) #maya\n\t\tif aTMwarning == 0:\n\t\t\tmaya.text('aTMSTATUS',e=1,l=\"OK!!!\",bgc=aTMbgcOK)  #maya\n\t\t\tmaya.text('aTMstatusInfo',e=1,bgc=aTMbgcOK)\n\t\t\tmaya.rowLayout(\"aTMstatusRowlayout\",e=1,bgc=aTMbgcOK) #maya\n\n#--------------procedura doUpdateWindowSlider --------------------------------------------------------------------------------------------------------------------------\ndef doUpdateWindowSlider(aTMcurrentTime):\n\taTMkeyExists = maya.keyframe(q=1,t=(aTMcurrentTime,aTMcurrentTime),vc=1)\n\tif not aTMkeyExists:\n\t\tglobal aTMlastSelected\n\t\tglobal aTManimCurvesArray\n\t\tglobal aTManimChannelsArray\n\t\tglobal aTMtweenBetweenValue\n\t\tglobal aTMmaxValArray\n\t\tglobal aTMminValArray\n\t\tglobal aTMpercentArray\n\t\taTManimTimeList = []\n\t\taTManimTimeArray = []\n\t\taTManimKeyPoseArray = []\n\t\taTManimValueArray = []\n\t\taTMpercentArray = []\n\t\taTMcurrSelected = maya.ls(sl=1,tr=1)\n\t\tif aTMlastSelected!=aTMcurrSelected and aTMcurrSelected:\n\t\t\taTMmaxValArray = []\n\t\t\taTMminValArray = []\n\t\t\taTManimCurvesArray = []\n\t\t\taTManimChannelsArray = []\n\t\t\tcollectSettingsState()\n\t\t\tfor aTMtransform in aTMcurrSelected:\n\t\t\t\taTManimCurves = maya.findKeyframe(aTMtransform,curve=True)\n\t\t\t\tfor aTManimCurve in aTManimCurves:\n\t\t\t\t\taTManimCurvesArray.append(aTManimCurve)\n\t\t\t\t\taTManimChannelsArray.append(maya.connectionInfo(aTManimCurve+\".o\",dfs=1)) #maya\n\t\t\t\t\taTManimValueTMP = maya.keyframe(aTManimCurve,q=1,vc=1) #maya\n\t\t\t\t\taTManimTimeTMP = maya.keyframe(aTManimCurve,q=1,tc=1) #maya\n\t\t\t\t\taTManimBreakTMP = maya.keyframe(aTManimCurve,q=1,bd=1) #maya\n\t\t\t\t\tif aTManimBreakTMP and aTMtweenBetweenValue ==2:\n\t\t\t\t\t\tfor aTMbreakdown in aTManimBreakTMP:\n\t\t\t\t\t\t\taTMindex = aTManimTimeTMP.index(aTMbreakdown)\n\t\t\t\t\t\t\taTManimTimeTMP.remove(aTMbreakdown)\n\t\t\t\t\t\t\taTManimValueTMP.pop(aTMindex)\n\t\t\t\t\taTManimTimeList = aTManimTimeList + aTManimTimeTMP\n\t\t\t\t\taTManimTimeArray.append(aTManimTimeTMP)\n\t\t\t\t\taTManimKeyPoseArray.append([1] * len(aTManimTimeTMP))\n\t\t\t\t\taTManimValueArray.append(aTManimValueTMP)\n\t\t\taTManimTimeGlobalArray = sorted(set(aTManimTimeList))\t\t\n\t\t\taTMactionTime = aTMcurrentTime\n\t\t\taTMlastSelected = aTMcurrSelected\n\t\t\n\t\t\tfor i in range(0,len(aTManimCurvesArray)):\n\t\t\t\tif len(aTManimTimeGlobalArray) != len(aTManimTimeArray[i]):\n\t\t\t\t\taTMmissedFramesArray = list(sorted(set(aTManimTimeGlobalArray).difference(set(aTManimTimeArray[i]))))\n\t\t\t\t\tfor aTMframe in aTMmissedFramesArray:\n\t\t\t\t\t\taTMindex = aTManimTimeGlobalArray.index(aTMframe)\n\t\t\t\t\t\taTMposeVarTMP = 0\n\t\t\t\t\t\tif \taTMframe<aTManimTimeArray[i][0]:\n\t\t\t\t\t\t\taTMprevFrameTMP = aTMframe\n\t\t\t\t\t\t\taTMprevVarTMP = aTManimValueArray[i][aTMindex]\n\t\t\t\t\t\t\taTMposeVarTMP = 2\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\taTMprevFrameTMP = aTManimTimeArray[i][aTMindex-1]\n\t\t\t\t\t\t\taTMprevVarTMP = aTManimValueArray[i][aTMindex-1]\n\t\t\t\t\t\tif \taTMindex==len(aTManimTimeArray[i]):\n\t\t\t\t\t\t\taTMnextFrameTMP = aTMframe\n\t\t\t\t\t\t\taTMnextVarTMP = aTManimValueArray[i][aTMindex-1]\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\taTMnextFrameTMP = aTManimTimeArray[i][aTMindex]\n\t\t\t\t\t\t\taTMnextVarTMP = aTManimValueArray[i][aTMindex]\n\t\t\t\t\t\tif aTMindex==len(aTManimTimeGlobalArray)-1: aTMposeVarTMP = 2\n\t\t\t\t\t\taTManimValueArray[i].insert(aTMindex,((aTMnextVarTMP-aTMprevVarTMP)/(aTMnextFrameTMP-aTMprevFrameTMP) * (aTMframe-aTMprevFrameTMP) + aTMprevVarTMP))\n\t\t\t\t\t\taTManimTimeArray[i].insert(aTMindex,aTMframe)\n\t\t\t\t\t\taTManimKeyPoseArray[i].insert(aTMindex,aTMposeVarTMP)\n#matematyka srednia\n\t\t\t\tfor a in range(0,len(aTManimTimeGlobalArray)):\n\t\t\t\t\tif aTManimTimeGlobalArray[a] <= aTMactionTime <= aTManimTimeGlobalArray[a+1]:\n\t\t\t\t\t\taTMmaxValArray.append(aTManimValueArray[i][a+1]-aTManimValueArray[i][a])\n\t\t\t\t\t\taTMminValArray.append(aTManimValueArray[i][a])\n\t\tfor i in range(0,len(aTManimCurvesArray)):\n\t\t\taTMkeyPoseValTMP = maya.keyframe(aTManimCurvesArray[i],q=1,t=(aTMcurrentTime,aTMcurrentTime),ev=1)\n\t\t\tif aTMkeyPoseValTMP[0]!=aTMminValArray[i] and aTMcurrSelected:\n\t\t\t\taTMpercentArray.append(abs((aTMkeyPoseValTMP[0]-aTMminValArray[i])*100/aTMmaxValArray[i]))\n\t\ttry:\n\t\t\tmaya.floatSliderGrp('aTMmainFloatSliderGrp',e=1,v=(sum(aTMpercentArray)/len(aTMpercentArray)))\n\t\texcept:\n\t\t\tpass\n\telse:\n\t\tmaya.floatSliderGrp('aTMmainFloatSliderGrp',e=1,v=0)\n\t\taTMlastSelected = []\nabzTweenMachineWindow()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "ExportLayerRange(0,15,'N_Jump_RightLeg')\nExportLayerRange(16,27,'N_Jump_InAir')\nExportLayerRange(28,35,'N_Jump_Land')" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "ExportLayerRange(0,15,'N_Jump_RightLeg')\nExportLayerRange(16,27,..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "ExportLayerRange(0,15,'N_Jump_RightLeg')\nExportLayerRange(15,27,'N_Jump_InAir')\nExportLayerRange(28,35,'N_Jump_Land')" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
